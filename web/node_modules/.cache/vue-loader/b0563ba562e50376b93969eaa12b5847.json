{"remainingRequest":"D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\hualiyeya\\web\\src\\components\\deviceRecord\\DeviceSettings.vue?vue&type=template&id=31918f21&scoped=true&","dependencies":[{"path":"D:\\git\\hualiyeya\\web\\src\\components\\deviceRecord\\DeviceSettings.vue","mtime":1593307092858},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"div\",\n      { staticClass: \"crumbs\" },\n      [\n        _c(\n          \"el-breadcrumb\",\n          { attrs: { separator: \"/\" } },\n          [\n            _c(\"el-breadcrumb-item\", [\n              _c(\"i\", { staticClass: \"el-icon-lx-calendar\" }),\n              _vm._v(\" 设备档案\\n            \")\n            ]),\n            _c(\"el-breadcrumb-item\", [_vm._v(\"测点配置\")])\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _c(\"div\", { staticClass: \"container\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"form-box\" },\n        [\n          _c(\n            \"el-form\",\n            { ref: \"form\", attrs: { model: _vm.form, \"label-width\": \"120px\" } },\n            [\n              _vm._l(_vm.form.point, function(item, index) {\n                return _c(\n                  \"div\",\n                  { key: index, staticClass: \"point\" },\n                  [\n                    _c(\"p\", { staticClass: \"point-title\" }, [\n                      _vm._v(\"测点\" + _vm._s(index + 1))\n                    ]),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"测点标识号\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: { disabled: \"\" },\n                          model: {\n                            value: item.cp_id,\n                            callback: function($$v) {\n                              _vm.$set(item, \"cp_id\", $$v)\n                            },\n                            expression: \"item.cp_id\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      {\n                        attrs: {\n                          label: \"测点名称\",\n                          prop: \"point.\" + index + \".cp_name\",\n                          rules: {\n                            required: true,\n                            message: \"测点名称不能为空\",\n                            trigger: \"blur\"\n                          }\n                        }\n                      },\n                      [\n                        _c(\"el-input\", {\n                          model: {\n                            value: item.cp_name,\n                            callback: function($$v) {\n                              _vm.$set(item, \"cp_name\", $$v)\n                            },\n                            expression: \"item.cp_name\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      {\n                        attrs: {\n                          label: \"测点单位\",\n                          prop: \"point.\" + index + \".unit\",\n                          rules: {\n                            required: true,\n                            message: \"测点单位不能为空\",\n                            trigger: \"blur\"\n                          }\n                        }\n                      },\n                      [\n                        _c(\"el-input\", {\n                          model: {\n                            value: item.unit,\n                            callback: function($$v) {\n                              _vm.$set(item, \"unit\", $$v)\n                            },\n                            expression: \"item.unit\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      {\n                        attrs: {\n                          label: \"量程上限值\",\n                          prop: \"point.\" + index + \".up\",\n                          rules: {\n                            required: true,\n                            message: \"量程上限值不能为空\",\n                            trigger: \"blur\"\n                          }\n                        }\n                      },\n                      [\n                        _c(\"el-input\", {\n                          model: {\n                            value: item.up,\n                            callback: function($$v) {\n                              _vm.$set(item, \"up\", $$v)\n                            },\n                            expression: \"item.up\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      {\n                        attrs: {\n                          label: \"量程下限值\",\n                          prop: \"point.\" + index + \".down\",\n                          rules: {\n                            required: true,\n                            message: \"量程下限值不能为空\",\n                            trigger: \"blur\"\n                          }\n                        }\n                      },\n                      [\n                        _c(\"el-input\", {\n                          model: {\n                            value: item.down,\n                            callback: function($$v) {\n                              _vm.$set(item, \"down\", $$v)\n                            },\n                            expression: \"item.down\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      {\n                        attrs: {\n                          label: \"报警上限值\",\n                          prop: \"point.\" + index + \".limit_up\",\n                          rules: {\n                            required: true,\n                            message: \"上限值不能为空\",\n                            trigger: \"blur\"\n                          }\n                        }\n                      },\n                      [\n                        _c(\"el-input\", {\n                          model: {\n                            value: item.limit_up,\n                            callback: function($$v) {\n                              _vm.$set(item, \"limit_up\", $$v)\n                            },\n                            expression: \"item.limit_up\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      {\n                        attrs: {\n                          label: \"报警下限值\",\n                          prop: \"point.\" + index + \".limit_down\",\n                          rules: {\n                            required: true,\n                            message: \"下限值不能为空\",\n                            trigger: \"blur\"\n                          }\n                        }\n                      },\n                      [\n                        _c(\"el-input\", {\n                          model: {\n                            value: item.limit_down,\n                            callback: function($$v) {\n                              _vm.$set(item, \"limit_down\", $$v)\n                            },\n                            expression: \"item.limit_down\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              }),\n              _c(\n                \"div\",\n                { staticStyle: { \"text-align\": \"right\" } },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          return _vm.submitForm(\"form\")\n                        }\n                      }\n                    },\n                    [_vm._v(\"提交\")]\n                  ),\n                  _c(\n                    \"div\",\n                    { staticStyle: { \"text-align\": \"center\" } },\n                    [\n                      _c(\"el-button\", { on: { click: _vm.addNewPoint } }, [\n                        _vm._v(\"新增\")\n                      ]),\n                      _c(\"el-button\", { on: { click: _vm.deletePoint } }, [\n                        _vm._v(\"删除\")\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            2\n          )\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}