{"remainingRequest":"D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\hualiyeya\\web\\src\\components\\view\\AddNewMaintenance.vue?vue&type=template&id=ba4d2f4c&scoped=true&","dependencies":[{"path":"D:\\git\\hualiyeya\\web\\src\\components\\view\\AddNewMaintenance.vue","mtime":1591579454583},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"div\",\n      { staticClass: \"crumbs\" },\n      [\n        _c(\n          \"el-breadcrumb\",\n          { attrs: { separator: \"/\" } },\n          [\n            _c(\"el-breadcrumb-item\", [\n              _c(\"i\", { staticClass: \"el-icon-lx-calendar\" }),\n              _vm._v(\" 设备档案\\n            \")\n            ]),\n            _c(\"el-breadcrumb-item\", [_vm._v(\"添加维修记录\")])\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _c(\n      \"div\",\n      { staticClass: \"container\" },\n      [\n        _c(\n          \"el-button\",\n          {\n            attrs: { type: \"primary\" },\n            on: {\n              click: function($event) {\n                return _vm.$router.go(-1)\n              }\n            }\n          },\n          [_vm._v(\"返回\")]\n        ),\n        _c(\n          \"div\",\n          { staticClass: \"form-box\" },\n          [\n            _c(\n              \"el-form\",\n              {\n                ref: \"form\",\n                attrs: { model: _vm.form, \"label-width\": \"120px\" }\n              },\n              [\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"企业名称\", prop: \"enterprise_id\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: { placeholder: \"请选择企业\" },\n                        on: {\n                          change: function($event) {\n                            return _vm.getDevices(_vm.enterprise_id)\n                          }\n                        },\n                        model: {\n                          value: _vm.enterprise_id,\n                          callback: function($$v) {\n                            _vm.enterprise_id = $$v\n                          },\n                          expression: \"enterprise_id\"\n                        }\n                      },\n                      _vm._l(_vm.enterprises, function(enterprise) {\n                        return _c(\"el-option\", {\n                          key: enterprise,\n                          attrs: {\n                            label: enterprise.enterprise_name,\n                            value: enterprise.id\n                          }\n                        })\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"设备ID\", prop: \"device_id\" } },\n                  [\n                    _c(\"el-autocomplete\", {\n                      staticClass: \"inline-input\",\n                      attrs: {\n                        \"fetch-suggestions\": _vm.querySearch,\n                        placeholder: \"请输入设备ID\"\n                      },\n                      on: { select: _vm.handleSelect },\n                      model: {\n                        value: _vm.eq,\n                        callback: function($$v) {\n                          _vm.eq = $$v\n                        },\n                        expression: \"eq\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"故障类型\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: { placeholder: \"请选择故障类型\" },\n                        on: { change: _vm.handelchoosefault },\n                        model: {\n                          value: _vm.form.type,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"type\", $$v)\n                          },\n                          expression: \"form.type\"\n                        }\n                      },\n                      _vm._l(_vm.faultType, function(type, index) {\n                        return _c(\"el-option\", {\n                          attrs: {\n                            label: type.fault_type,\n                            value: type.fault_type\n                          }\n                        })\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"故障现象\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: { placeholder: \"请选择故障现象\" },\n                        model: {\n                          value: _vm.form.phenomenon,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"phenomenon\", $$v)\n                          },\n                          expression: \"form.phenomenon\"\n                        }\n                      },\n                      _vm._l(_vm.choosefault, function(phenomenon) {\n                        return _c(\"el-option\", {\n                          attrs: { label: phenomenon, value: phenomenon }\n                        })\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"可能产生的原因\", prop: \"cause\" } },\n                  [\n                    _c(\"el-input\", {\n                      model: {\n                        value: _vm.form.cause,\n                        callback: function($$v) {\n                          _vm.$set(_vm.form, \"cause\", $$v)\n                        },\n                        expression: \"form.cause\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"排除方法\", prop: \"methods\" } },\n                  [\n                    _c(\"el-input\", {\n                      model: {\n                        value: _vm.form.methods,\n                        callback: function($$v) {\n                          _vm.$set(_vm.form, \"methods\", $$v)\n                        },\n                        expression: \"form.methods\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"维修人\", prop: \"repair_person\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { type: \"text\" },\n                      model: {\n                        value: _vm.form.repair_person,\n                        callback: function($$v) {\n                          _vm.$set(_vm.form, \"repair_person\", $$v)\n                        },\n                        expression: \"form.repair_person\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"备注\", prop: \"more\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { type: \"text\" },\n                      model: {\n                        value: _vm.form.more,\n                        callback: function($$v) {\n                          _vm.$set(_vm.form, \"more\", $$v)\n                        },\n                        expression: \"form.more\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  [\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"primary\" },\n                        on: { click: _vm.onSubmit }\n                      },\n                      [_vm._v(\"提交\")]\n                    ),\n                    _c(\n                      \"el-button\",\n                      {\n                        on: {\n                          click: function($event) {\n                            return _vm.resetForm(\"form\")\n                          }\n                        }\n                      },\n                      [_vm._v(\"取消\")]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}