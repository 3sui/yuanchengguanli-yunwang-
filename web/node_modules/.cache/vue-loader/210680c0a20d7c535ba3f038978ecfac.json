{"remainingRequest":"D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\hualiyeya\\web\\src\\components\\maintain\\MeasuringPointDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\git\\hualiyeya\\web\\src\\components\\maintain\\MeasuringPointDetails.vue","mtime":1594190522373},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Schart from 'vue-schart';\r\nimport Moment from 'moment';\r\n\r\nexport default {\r\n    name: 'MeasuringPointDetails',\r\n    data() {\r\n        return {\r\n            tableData: [],\r\n            multipleSelection: [],\r\n            delList: [],\r\n            editVisible: false,\r\n            pageTotal: 0,\r\n            form: {},\r\n            idx: -1,\r\n            id: -1,\r\n            pickerOptions: {\r\n                shortcuts: [\r\n                    {\r\n                        text: '最近一周',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n                            picker.$emit('pick', [start, end]);\r\n                        }\r\n                    },\r\n                    {\r\n                        text: '最近一个月',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n                            picker.$emit('pick', [start, end]);\r\n                        }\r\n                    },\r\n                    {\r\n                        text: '最近三个月',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                            picker.$emit('pick', [start, end]);\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            query: {\r\n                address: '',\r\n                name: '',\r\n                pageIndex: 1,\r\n                pageSize: 10\r\n            },\r\n            schart: [],\r\n            value1: '',\r\n            value2: '',\r\n            limit: {},\r\n            pageIndex: 1\r\n        };\r\n    },\r\n\r\n    components: {\r\n        Schart\r\n    },\r\n\r\n    computed: {},\r\n    created() {},\r\n    mounted() {\r\n        this.getData();\r\n        window.console.log(document.getElementById('myChart1'));\r\n    },\r\n    methods: {\r\n        getData(date) {\r\n            let eq = this.$route.query.eq;\r\n            window.console.log(eq);\r\n            axios({\r\n                method: 'get',\r\n                url: '/maintain/fetchPointInfo',\r\n                params: {\r\n                    eq,\r\n                    date\r\n                }\r\n            })\r\n                .then(res => {\r\n                    window.console.log(res.data);\r\n                    this.tableData = res.data;\r\n                    let data = res.data;\r\n                    let arr = {};\r\n                    this.schart = [];\r\n                    for (let i = 1; i < data.delimit.length + 1; i++) {\r\n                        let a = 'cp' + i;\r\n                        let b = 'option' + i;\r\n                        let info = [];\r\n                        let date = [];\r\n                        // let limit_up =\r\n\r\n                        arr[a] = data.delimit.find(item => {\r\n                            return item.cp_id == a;\r\n                        });\r\n                        let limit_up = arr[a].limit_up;\r\n                        let limit_down = arr[a].limit_down;\r\n\r\n                        window.console.log(limit_up);\r\n                        window.console.log(limit_down);\r\n\r\n                        data.info.forEach(item => {\r\n                            info.push((item[a] / 4096) * (arr[a].up - arr[a].down) + arr[a].down);\r\n                            date.push(Moment(+item.ts).format('HH:mm:ss'));\r\n                        });\r\n                        // window.console.log(date);\r\n                        let option = {\r\n                            color: ['#ed7a2c', '#5b9bd5', '#a5a5a5'],\r\n                            grid: {\r\n                                bottom: 60\r\n                            },\r\n                            title: {\r\n                                text: arr[a].cp_name,\r\n                                x: 'center',\r\n                                y: '10',\r\n                                textStyle: {\r\n                                    fontWeight: 500,\r\n                                    fontSize: '20'\r\n                                }\r\n                            },\r\n                            tooltip: {\r\n                                trigger: 'axis',\r\n                                confine: true,\r\n                                textStyle: {\r\n                                    fontSize: 12\r\n                                }\r\n                            },\r\n                            xAxis: {\r\n                                type: 'category',\r\n                                data: date\r\n                            },\r\n                            yAxis: {\r\n                                type: 'value',\r\n                                scale: true\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    name: arr[a].cp_name,\r\n                                    type: 'line',\r\n                                    markLine: {\r\n                                        lineStyle: {\r\n                                            width: 2\r\n                                        },\r\n                                        label: {\r\n                                            position: 'insideEndTop',\r\n                                            formatter: '{b}',\r\n                                            color: '#333'\r\n                                        },\r\n                                        symbolSize: 0,\r\n                                        data: [\r\n                                            {\r\n                                                name: '上限值',\r\n                                                yAxis: limit_up,\r\n                                                lineStyle: {\r\n                                                    color: '#f60902'\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                name: '下限值',\r\n                                                yAxis: limit_down,\r\n                                                lineStyle: {\r\n                                                    color: '#f89933'\r\n                                                }\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    data: info\r\n                                }\r\n                            ]\r\n                            //-------------------------------------\r\n                            // type: 'line',\r\n                            // title: {\r\n                            //     text: arr[a].cp_name\r\n                            // },\r\n                            // bgColor: '#fff',\r\n                            // labels: date,\r\n                            // datasets: [\r\n                            //     {\r\n                            //         data: info\r\n                            //     }\r\n                            // ],\r\n                            // legend: {\r\n                            //     display: false\r\n                            // },\r\n                            // leftPadding: 50,\r\n                            // rightPadding: 50,\r\n                            // width: '100%'\r\n                        };\r\n                        this.schart.push(option);\r\n                        window.console.log(this.schart);\r\n                        // myChart.setOption(option);\r\n                    }\r\n                    this.limit = arr;\r\n                    window.console.log(arr);\r\n                })\r\n                .then(() => {\r\n                    for (let i in this.schart) {\r\n                        let divId = 'myChart' + i;\r\n                        window.console.log(document.getElementById(divId));\r\n                        let myChart = this.$echarts.init(document.getElementById(divId));\r\n                        myChart.setOption(this.schart[i]);\r\n                    }\r\n                })\r\n                .catch(err => {});\r\n        },\r\n        // 触发搜索按钮\r\n        handleSearch() {\r\n            this.$set(this.query, 'pageIndex', 1);\r\n            this.getData();\r\n        },\r\n        // 删除操作\r\n        handleDelete(index, row) {\r\n            // 二次确认删除\r\n            this.$confirm('确定要删除吗？', '提示', {\r\n                type: 'warning'\r\n            })\r\n                .then(() => {\r\n                    this.$message.success('删除成功');\r\n                    this.tableData.splice(index, 1);\r\n                })\r\n                .catch(() => {});\r\n        },\r\n        handleSelectionChange(val) {\r\n            this.multipleSelection = val;\r\n        },\r\n        delAllSelection() {\r\n            const length = this.multipleSelection.length;\r\n            let str = '';\r\n            this.delList = this.delList.concat(this.multipleSelection);\r\n            for (let i = 0; i < length; i++) {\r\n                str += this.multipleSelection[i].name + ' ';\r\n            }\r\n            this.$message.error(`删除了${str}`);\r\n            this.multipleSelection = [];\r\n        },\r\n        // 编辑操作\r\n        handleEdit(index, row) {\r\n            this.idx = index;\r\n            this.form = row;\r\n            this.editVisible = true;\r\n        },\r\n        // 保存编辑\r\n        saveEdit() {\r\n            this.editVisible = false;\r\n            this.$message.success(`修改第 ${this.idx + 1} 行成功`);\r\n            this.$set(this.tableData, this.idx, this.form);\r\n        },\r\n        // 分页导航\r\n        handlePageChange(val) {\r\n            this.$set(this.query, 'pageIndex', val);\r\n            this.getData();\r\n        }\r\n    }\r\n};\r\n",{"version":3,"sources":["MeasuringPointDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MeasuringPointDetails.vue","sourceRoot":"src/components/maintain","sourcesContent":["<!--\r\n * @Author: your name\r\n * @Date: 2020-05-07 10:52:41\r\n * @LastEditTime: 2020-07-03 11:15:32\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 测点详情\r\n * @FilePath: \\vue-manage-system\\src\\components\\view\\MeasuringPointDetails.vue\r\n -->\r\n <template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-cascades\"></i> 远程监控\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>测点详情</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <div class=\"container\">\r\n            <div>\r\n                <el-button\r\n                    type=\"primary\"\r\n                    \r\n                    class=\"handle-del mr10 mb-30\"\r\n                    @click=\"$router.go(-1)\"\r\n                >返回</el-button>\r\n\r\n                <el-button\r\n                    type=\"primary\"\r\n                    class=\"handle-del mr10 mb-30\"\r\n                    @click=\"getData(7)\"\r\n                    style=\"float: right\"\r\n                >七天数据</el-button>\r\n                <el-button\r\n                    type=\"primary\"\r\n                    class=\"handle-del mr10 mb-30\"\r\n                    @click=\"getData(3)\"\r\n                    style=\"float: right\"\r\n                >三天数据</el-button>\r\n                <el-button\r\n                    type=\"primary\"\r\n                    class=\"handle-del mr10 mb-30\"\r\n                    @click=\"getData()\"\r\n                    style=\"float: right\"\r\n                >实时数据</el-button>\r\n            </div>\r\n\r\n            <div class=\"schart-container\">\r\n                <div class=\"schart-box\" v-for=\"(item, index) in tableData.delimit\" :key=\"index\">\r\n                    <div class=\"schart\" :id=\"'myChart' + index\"></div>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"handle-box\">\r\n                <el-row>\r\n                    <el-col :span=\"18\">\r\n                        <div class=\"product-status\">\r\n                            <el-input\r\n                                v-model=\"query.name\"\r\n                                placeholder=\"请输入关键字\"\r\n                                class=\"handle-input mr10\"\r\n                            ></el-input>\r\n                            <el-select\r\n                                v-model=\"query.address\"\r\n                                placeholder=\"工作状态\"\r\n                                class=\"handle-select mr10\"\r\n                            >\r\n                                <el-option key=\"1\" label=\"运行中\" value=\"运行中\"></el-option>\r\n                            </el-select>\r\n                            <div class=\"block\">\r\n                                <el-date-picker\r\n                                    class=\"mr10\"\r\n                                    v-model=\"value2\"\r\n                                    type=\"daterange\"\r\n                                    align=\"right\"\r\n                                    unlink-panels\r\n                                    range-separator=\"至\"\r\n                                    start-placeholder=\"开始日期\"\r\n                                    end-placeholder=\"结束日期\"\r\n                                    :picker-options=\"pickerOptions\"\r\n                                ></el-date-picker>\r\n                            </div>\r\n                            <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">搜索</el-button>\r\n                            <el-button style=\"float: right\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">导出</el-button>\r\n                        </div>\r\n                    </el-col>\r\n                </el-row>\r\n            </div>-->\r\n            <div class=\"block mt-2\" style=\"float: right\">\r\n                <!-- <span class=\"demonstration\">显示总数</span> -->\r\n                <el-pagination\r\n                @size-change=\"handleSizeChange\"\r\n                @current-change=\"handleCurrentChange\"\r\n                :current-page.sync=\"pageIndex\"\r\n                :page-size=\"100\"\r\n                layout=\"total, prev, pager, next\"\r\n                :total=\"tableData.info.length\">\r\n                </el-pagination>\r\n            </div>\r\n            <el-table\r\n                :data=\"tableData.info.slice((pageIndex -1)*10, pageIndex *10)\"\r\n                border\r\n                class=\"table\"\r\n                ref=\"multipleTable\"\r\n                header-cell-class-name=\"table-header\"\r\n                @selection-change=\"handleSelectionChange\"\r\n            >\r\n                <el-table-column prop=\"eq\" label=\"设备ID\"></el-table-column>\r\n                <el-table-column\r\n                    :prop=\"item.cp_id\"\r\n                    :label=\"item.cp_name\"\r\n                    v-for=\"(item, index) in tableData.delimit\"\r\n                    :key=\"index\"\r\n                >\r\n                    <template slot-scope=\"scope\">\r\n                        <div>{{+(scope.row[item.cp_id]/4096 * (limit[item.cp_id].up - limit[item.cp_id].down) + +limit[item.cp_id].down).toFixed(2)}}</div>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"ts\" label=\"数据时间\">\r\n                    <template slot-scope=\"scope\">\r\n                        <div>{{scope.row.ts | convertTime2('YYYY-MM-DD HH:mm:ss')}}</div>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            \r\n            <!-- <div class=\"pagination\">\r\n                <el-pagination\r\n                    background\r\n                    layout=\"total, prev, pager, next\"\r\n                    :current-page=\"query.pageIndex\"\r\n                    :page-size=\"query.pageSize\"\r\n                    :total=\"pageTotal\"\r\n                    @current-change=\"handlePageChange\"\r\n                ></el-pagination>\r\n            </div>-->\r\n        </div>\r\n    </div>\r\n</template>\r\n \r\n<script>\r\nimport Schart from 'vue-schart';\r\nimport Moment from 'moment';\r\n\r\nexport default {\r\n    name: 'MeasuringPointDetails',\r\n    data() {\r\n        return {\r\n            tableData: [],\r\n            multipleSelection: [],\r\n            delList: [],\r\n            editVisible: false,\r\n            pageTotal: 0,\r\n            form: {},\r\n            idx: -1,\r\n            id: -1,\r\n            pickerOptions: {\r\n                shortcuts: [\r\n                    {\r\n                        text: '最近一周',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n                            picker.$emit('pick', [start, end]);\r\n                        }\r\n                    },\r\n                    {\r\n                        text: '最近一个月',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n                            picker.$emit('pick', [start, end]);\r\n                        }\r\n                    },\r\n                    {\r\n                        text: '最近三个月',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                            picker.$emit('pick', [start, end]);\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            query: {\r\n                address: '',\r\n                name: '',\r\n                pageIndex: 1,\r\n                pageSize: 10\r\n            },\r\n            schart: [],\r\n            value1: '',\r\n            value2: '',\r\n            limit: {},\r\n            pageIndex: 1\r\n        };\r\n    },\r\n\r\n    components: {\r\n        Schart\r\n    },\r\n\r\n    computed: {},\r\n    created() {},\r\n    mounted() {\r\n        this.getData();\r\n        window.console.log(document.getElementById('myChart1'));\r\n    },\r\n    methods: {\r\n        getData(date) {\r\n            let eq = this.$route.query.eq;\r\n            window.console.log(eq);\r\n            axios({\r\n                method: 'get',\r\n                url: '/maintain/fetchPointInfo',\r\n                params: {\r\n                    eq,\r\n                    date\r\n                }\r\n            })\r\n                .then(res => {\r\n                    window.console.log(res.data);\r\n                    this.tableData = res.data;\r\n                    let data = res.data;\r\n                    let arr = {};\r\n                    this.schart = [];\r\n                    for (let i = 1; i < data.delimit.length + 1; i++) {\r\n                        let a = 'cp' + i;\r\n                        let b = 'option' + i;\r\n                        let info = [];\r\n                        let date = [];\r\n                        // let limit_up =\r\n\r\n                        arr[a] = data.delimit.find(item => {\r\n                            return item.cp_id == a;\r\n                        });\r\n                        let limit_up = arr[a].limit_up;\r\n                        let limit_down = arr[a].limit_down;\r\n\r\n                        window.console.log(limit_up);\r\n                        window.console.log(limit_down);\r\n\r\n                        data.info.forEach(item => {\r\n                            info.push((item[a] / 4096) * (arr[a].up - arr[a].down) + arr[a].down);\r\n                            date.push(Moment(+item.ts).format('HH:mm:ss'));\r\n                        });\r\n                        // window.console.log(date);\r\n                        let option = {\r\n                            color: ['#ed7a2c', '#5b9bd5', '#a5a5a5'],\r\n                            grid: {\r\n                                bottom: 60\r\n                            },\r\n                            title: {\r\n                                text: arr[a].cp_name,\r\n                                x: 'center',\r\n                                y: '10',\r\n                                textStyle: {\r\n                                    fontWeight: 500,\r\n                                    fontSize: '20'\r\n                                }\r\n                            },\r\n                            tooltip: {\r\n                                trigger: 'axis',\r\n                                confine: true,\r\n                                textStyle: {\r\n                                    fontSize: 12\r\n                                }\r\n                            },\r\n                            xAxis: {\r\n                                type: 'category',\r\n                                data: date\r\n                            },\r\n                            yAxis: {\r\n                                type: 'value',\r\n                                scale: true\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    name: arr[a].cp_name,\r\n                                    type: 'line',\r\n                                    markLine: {\r\n                                        lineStyle: {\r\n                                            width: 2\r\n                                        },\r\n                                        label: {\r\n                                            position: 'insideEndTop',\r\n                                            formatter: '{b}',\r\n                                            color: '#333'\r\n                                        },\r\n                                        symbolSize: 0,\r\n                                        data: [\r\n                                            {\r\n                                                name: '上限值',\r\n                                                yAxis: limit_up,\r\n                                                lineStyle: {\r\n                                                    color: '#f60902'\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                name: '下限值',\r\n                                                yAxis: limit_down,\r\n                                                lineStyle: {\r\n                                                    color: '#f89933'\r\n                                                }\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    data: info\r\n                                }\r\n                            ]\r\n                            //-------------------------------------\r\n                            // type: 'line',\r\n                            // title: {\r\n                            //     text: arr[a].cp_name\r\n                            // },\r\n                            // bgColor: '#fff',\r\n                            // labels: date,\r\n                            // datasets: [\r\n                            //     {\r\n                            //         data: info\r\n                            //     }\r\n                            // ],\r\n                            // legend: {\r\n                            //     display: false\r\n                            // },\r\n                            // leftPadding: 50,\r\n                            // rightPadding: 50,\r\n                            // width: '100%'\r\n                        };\r\n                        this.schart.push(option);\r\n                        window.console.log(this.schart);\r\n                        // myChart.setOption(option);\r\n                    }\r\n                    this.limit = arr;\r\n                    window.console.log(arr);\r\n                })\r\n                .then(() => {\r\n                    for (let i in this.schart) {\r\n                        let divId = 'myChart' + i;\r\n                        window.console.log(document.getElementById(divId));\r\n                        let myChart = this.$echarts.init(document.getElementById(divId));\r\n                        myChart.setOption(this.schart[i]);\r\n                    }\r\n                })\r\n                .catch(err => {});\r\n        },\r\n        // 触发搜索按钮\r\n        handleSearch() {\r\n            this.$set(this.query, 'pageIndex', 1);\r\n            this.getData();\r\n        },\r\n        // 删除操作\r\n        handleDelete(index, row) {\r\n            // 二次确认删除\r\n            this.$confirm('确定要删除吗？', '提示', {\r\n                type: 'warning'\r\n            })\r\n                .then(() => {\r\n                    this.$message.success('删除成功');\r\n                    this.tableData.splice(index, 1);\r\n                })\r\n                .catch(() => {});\r\n        },\r\n        handleSelectionChange(val) {\r\n            this.multipleSelection = val;\r\n        },\r\n        delAllSelection() {\r\n            const length = this.multipleSelection.length;\r\n            let str = '';\r\n            this.delList = this.delList.concat(this.multipleSelection);\r\n            for (let i = 0; i < length; i++) {\r\n                str += this.multipleSelection[i].name + ' ';\r\n            }\r\n            this.$message.error(`删除了${str}`);\r\n            this.multipleSelection = [];\r\n        },\r\n        // 编辑操作\r\n        handleEdit(index, row) {\r\n            this.idx = index;\r\n            this.form = row;\r\n            this.editVisible = true;\r\n        },\r\n        // 保存编辑\r\n        saveEdit() {\r\n            this.editVisible = false;\r\n            this.$message.success(`修改第 ${this.idx + 1} 行成功`);\r\n            this.$set(this.tableData, this.idx, this.form);\r\n        },\r\n        // 分页导航\r\n        handlePageChange(val) {\r\n            this.$set(this.query, 'pageIndex', val);\r\n            this.getData();\r\n        }\r\n    }\r\n};\r\n</script>\r\n<style scoped>\r\n.schart-box {\r\n    /* display: inline-block; */\r\n    margin: 10px 0;\r\n\r\n    width: 100%;\r\n    background-color: #eee;\r\n\r\n    /* width: 100%; */\r\n}\r\n.schart {\r\n    /* margin: 0 auto; */\r\n\r\n    /* width: 95%; */\r\n    height: 300px;\r\n}\r\n.product-status {\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n.mt-10 {\r\n    margin-bottom: 10px;\r\n}\r\n.mr10 {\r\n    margin-right: 10px;\r\n}\r\n</style>\r\n"]}]}