{"remainingRequest":"D:\\git\\hualiyeya\\web\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js!D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\hualiyeya\\web\\src\\components\\DataSettings\\DeviceType.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\git\\hualiyeya\\web\\src\\components\\DataSettings\\DeviceType.vue","mtime":1594190522238},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:/git/hualiyeya/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'DeviceType',\n  data: function data() {\n    return {\n      keyword: '',\n      tableData: [],\n      showData: [],\n      query: {\n        msg: '',\n        //关键字\n        date: '',\n        //筛选日期\n        pageIndex: 1,\n        //当前页数\n        pageSize: 10 //每页显示个数选择器的选项设置\n\n      },\n      editVisible: false,\n      pageTotal: 0,\n      pageIndex: 1,\n      pageSize: 10,\n      form: {},\n      isAdd: true,\n      idx: 1,\n      checkdelete: false\n    };\n  },\n  created: function created() {\n    this.getData();\n  },\n  methods: {\n    //获取当前时间\n    // 获取数据\n    getData: function getData() {\n      var _this = this;\n\n      this.$axios.get('/dataSettings/DeviceType').then(function (res) {\n        _this.tableData = res.data;\n        _this.showData = _this.tableData.slice((_this.query.pageIndex - 1) * _this.query.pageSize, _this.query.pageIndex * _this.query.pageSize);\n        _this.pageTotal = res.data.length;\n        window.console.log(res.data);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    // 触发搜索按钮\n    handleSearch: function handleSearch(value) {\n      var _this2 = this;\n\n      this.query.pageIndex = 1;\n      this.showData = this.tableData.filter(function (item, index) {\n        // return item.Address == '竹林北路256号';\n        for (var key in item) {\n          // window.console.log(i, item[i]);\n          if ((item[key] + '').includes(_this2.query.msg + '')) {\n            return true;\n          }\n        }\n      });\n      this.pageTotal = this.showData.length;\n      this.showData = this.showData.slice((this.query.pageIndex - 1) * this.query.pageSize, this.query.pageIndex * this.query.pageSize);\n    },\n    //获取设备种类关联设备表判断是否可以删除\n    getDeviceTypeAndDevice: function () {\n      var _getDeviceTypeAndDevice = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id) {\n        var _this3 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$axios.post('/dataSettings/CheckDeviceTypeId', {\n                  id: id\n                }).then(function (res) {\n                  if (res.data.length !== 0) {\n                    _this3.checkdelete = false;\n                    console.log('>>>>>>>>>');\n                  } else {\n                    _this3.checkdelete = true;\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getDeviceTypeAndDevice(_x) {\n        return _getDeviceTypeAndDevice.apply(this, arguments);\n      }\n\n      return getDeviceTypeAndDevice;\n    }(),\n    // 删除操作\n    handleDelete: function () {\n      var _handleDelete = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(index, row) {\n        var _this4 = this;\n\n        var flag;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getDeviceTypeAndDevice(row.id);\n\n              case 2:\n                flag = this.checkdelete;\n                console.log(flag);\n\n                if (!flag) {\n                  this.$message.error('有设备关联设备种类，请解除关联后删除！');\n                } else {\n                  // 二次确认删除\n                  this.$confirm('确定要删除吗？', '提示', {\n                    type: 'warning'\n                  }).then(function () {\n                    var query = {\n                      id: row.id\n                    };\n\n                    _this4.$axios.post('/dataSettings/DeleteDeviceType', query).then(function (res) {\n                      //console.log(res);\n                      _this4.pageIndex = 1;\n\n                      _this4.getData();\n\n                      _this4.$message.success('删除成功');\n                    });\n                  }).catch(function (err) {\n                    console.log(err);\n                  });\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleDelete(_x2, _x3) {\n        return _handleDelete.apply(this, arguments);\n      }\n\n      return handleDelete;\n    }(),\n    // 多选操作\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    //添加操作\n    AddData: function AddData() {\n      this.editVisible = true;\n      this.isAdd = true;\n      this.form = {\n        typename: '' // is_deleted: 0\n\n      };\n    },\n    //获取设备种类列表\n    getdevicetypeelist: function getdevicetypeelist() {\n      var list = [];\n      this.tableData.forEach(function (element) {\n        list.push(element.typename);\n      });\n      return list;\n    },\n    //添加确认\n    Confirm: function Confirm(formName) {\n      var _this5 = this;\n\n      // if (this.form.typename === '' || this.form.typename === '') {\n      //     this.$message.error(`设备名称不能为空`);\n      // } else if (this.form.typename.length > 128) {\n      //     this.$message.error(`设备名称过长`);\n      // } else {\n      var arrylist = this.getdevicetypeelist();\n      console.log(arrylist);\n      var temp = this.form.typename;\n      console.log(temp);\n\n      if (arrylist.indexOf(temp) !== -1) {\n        this.$message.error(\"\\u8BBE\\u5907\\u7C7B\\u578B\\u540D\\u79F0\\u4E0D\\u80FD\\u91CD\\u590D\");\n      } else {\n        this.$refs[formName].validate(function (valid) {\n          if (valid) {\n            if (_this5.isAdd) {\n              // this.query.industry_name=this.form.industry_name\n              // let date = new Date();\n              // this.form.created_time = date.getTime();\n              // console.log(date);\n              _this5.$axios.post('/dataSettings/AddDeviceType', _this5.form).then(function (res) {\n                console.log(res.data);\n\n                _this5.getData();\n              }).catch(function (err) {\n                console.log(err);\n              });\n            } else {\n              _this5.form.id = _this5.idx; // delete this.form['created_time'];\n              // let date =new Date(this.form.created_time )\n              // this.form.created_time =  date.getTime();\n\n              _this5.$axios.post('/dataSettings/updateDeviceType', _this5.form).then(function (res) {\n                console.log(res.data);\n\n                _this5.getData();\n\n                _this5.$message.success('修改成功');\n              }).catch(function (err) {\n                console.log(err);\n              });\n            }\n\n            _this5.editVisible = false;\n            _this5.form = {}; // }\n          } else {\n            console.log('error submit!!');\n            return false;\n          }\n        });\n      }\n    },\n    //取消\n    Cancel: function Cancel() {\n      this.editVisible = false;\n      this.form = {};\n      this.getData();\n    },\n    // 编辑操作\n    handleEdit: function handleEdit(index, row) {\n      this.idx = row.id;\n      this.form = JSON.parse(JSON.stringify(row));\n      this.editVisible = true;\n      this.isAdd = false;\n    },\n    // 分页导航\n    handlePageChange: function handlePageChange(val) {\n      window.console.log(val);\n      this.$set(this.query, 'pageIndex', val);\n      this.getData();\n    }\n  }\n};",{"version":3,"sources":["DeviceType.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA;AACA,QAAA,GAAA,EAAA,EADA;AACA;AACA,QAAA,IAAA,EAAA,EAFA;AAEA;AACA,QAAA,SAAA,EAAA,CAHA;AAGA;AACA,QAAA,QAAA,EAAA,EAJA,CAIA;;AAJA,OAJA;AAUA,MAAA,WAAA,EAAA,KAVA;AAWA,MAAA,SAAA,EAAA,CAXA;AAYA,MAAA,SAAA,EAAA,CAZA;AAaA,MAAA,QAAA,EAAA,EAbA;AAcA,MAAA,IAAA,EAAA,EAdA;AAeA,MAAA,KAAA,EAAA,IAfA;AAgBA,MAAA,GAAA,EAAA,CAhBA;AAiBA,MAAA,WAAA,EAAA;AAjBA,KAAA;AAmBA,GAtBA;AAuBA,EAAA,OAvBA,qBAuBA;AACA,SAAA,OAAA;AACA,GAzBA;AA2BA,EAAA,OAAA,EAAA;AACA;AAEA;AACA,IAAA,OAJA,qBAIA;AAAA;;AACA,WAAA,MAAA,CACA,GADA,CACA,0BADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CACA,CAAA,KAAA,CAAA,KAAA,CAAA,SAAA,GAAA,CAAA,IAAA,KAAA,CAAA,KAAA,CAAA,QADA,EAEA,KAAA,CAAA,KAAA,CAAA,SAAA,GAAA,KAAA,CAAA,KAAA,CAAA,QAFA,CAAA;AAIA,QAAA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA,MAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA;AACA,OAVA,EAWA,KAXA,CAWA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,OAbA;AAcA,KAnBA;AAoBA;AACA,IAAA,YArBA,wBAqBA,KArBA,EAqBA;AAAA;;AACA,WAAA,KAAA,CAAA,SAAA,GAAA,CAAA;AACA,WAAA,QAAA,GAAA,KAAA,SAAA,CAAA,MAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA;AACA,aAAA,IAAA,GAAA,IAAA,IAAA,EAAA;AACA;AACA,cAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,EAAA,EAAA,QAAA,CAAA,MAAA,CAAA,KAAA,CAAA,GAAA,GAAA,EAAA,CAAA,EAAA;AACA,mBAAA,IAAA;AACA;AACA;AACA,OARA,CAAA;AASA,WAAA,SAAA,GAAA,KAAA,QAAA,CAAA,MAAA;AAEA,WAAA,QAAA,GAAA,KAAA,QAAA,CAAA,KAAA,CACA,CAAA,KAAA,KAAA,CAAA,SAAA,GAAA,CAAA,IAAA,KAAA,KAAA,CAAA,QADA,EAEA,KAAA,KAAA,CAAA,SAAA,GAAA,KAAA,KAAA,CAAA,QAFA,CAAA;AAIA,KAtCA;AAwCA;AACA,IAAA,sBAzCA;AAAA,6GAyCA,EAzCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA0CA,KAAA,MAAA,CAAA,IAAA,CAAA,iCAAA,EAAA;AAAA,kBAAA,EAAA,EAAA;AAAA,iBAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,sBAAA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,oBAAA,MAAA,CAAA,WAAA,GAAA,KAAA;AACA,oBAAA,OAAA,CAAA,GAAA,CAAA,WAAA;AACA,mBAHA,MAGA;AACA,oBAAA,MAAA,CAAA,WAAA,GAAA,IAAA;AACA;AACA,iBAPA,CA1CA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmDA;AACA,IAAA,YApDA;AAAA,oGAoDA,KApDA,EAoDA,GApDA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAuDA,KAAA,sBAAA,CAAA,GAAA,CAAA,EAAA,CAvDA;;AAAA;AAwDA,gBAAA,IAxDA,GAwDA,KAAA,WAxDA;AAyDA,gBAAA,OAAA,CAAA,GAAA,CAAA,IAAA;;AAEA,oBAAA,CAAA,IAAA,EAAA;AACA,uBAAA,QAAA,CAAA,KAAA,CAAA,qBAAA;AACA,iBAFA,MAEA;AACA;AACA,uBAAA,QAAA,CAAA,SAAA,EAAA,IAAA,EAAA;AACA,oBAAA,IAAA,EAAA;AADA,mBAAA,EAGA,IAHA,CAGA,YAAA;AACA,wBAAA,KAAA,GAAA;AACA,sBAAA,EAAA,EAAA,GAAA,CAAA;AADA,qBAAA;;AAGA,oBAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA,KAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA;AACA,sBAAA,MAAA,CAAA,SAAA,GAAA,CAAA;;AACA,sBAAA,MAAA,CAAA,OAAA;;AACA,sBAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;AACA,qBALA;AAMA,mBAbA,EAcA,KAdA,CAcA,UAAA,GAAA,EAAA;AACA,oBAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,mBAhBA;AAiBA;;AAhFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkFA;AACA,IAAA,qBAnFA,iCAmFA,GAnFA,EAmFA;AACA,WAAA,iBAAA,GAAA,GAAA;AACA,KArFA;AAuFA;AACA,IAAA,OAxFA,qBAwFA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,KAAA,GAAA,IAAA;AACA,WAAA,IAAA,GAAA;AACA,QAAA,QAAA,EAAA,EADA,CAEA;;AAFA,OAAA;AAIA,KA/FA;AAiGA;AACA,IAAA,kBAlGA,gCAkGA;AACA,UAAA,IAAA,GAAA,EAAA;AACA,WAAA,SAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,QAAA;AACA,OAFA;AAGA,aAAA,IAAA;AACA,KAxGA;AAyGA;AACA,IAAA,OA1GA,mBA0GA,QA1GA,EA0GA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,QAAA,GAAA,KAAA,kBAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA,CAAA,QAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;;AAEA,UAAA,QAAA,CAAA,OAAA,CAAA,IAAA,MAAA,CAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA;AAEA,OAHA,MAGA;AAEA,aAAA,KAAA,CAAA,QAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,cAAA,KAAA,EAAA;AACA,gBAAA,MAAA,CAAA,KAAA,EAAA;AACA;AACA;AACA;AACA;AACA,cAAA,MAAA,CAAA,MAAA,CACA,IADA,CACA,6BADA,EACA,MAAA,CAAA,IADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA;;AACA,gBAAA,MAAA,CAAA,OAAA;AACA,eALA,EAMA,KANA,CAMA,UAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,eARA;AASA,aAdA,MAcA;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,EAAA,GAAA,MAAA,CAAA,GAAA,CADA,CAEA;AACA;AACA;;AACA,cAAA,MAAA,CAAA,MAAA,CACA,IADA,CACA,gCADA,EACA,MAAA,CAAA,IADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA;;AACA,gBAAA,MAAA,CAAA,OAAA;;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;AACA,eANA,EAOA,KAPA,CAOA,UAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,eATA;AAUA;;AACA,YAAA,MAAA,CAAA,WAAA,GAAA,KAAA;AACA,YAAA,MAAA,CAAA,IAAA,GAAA,EAAA,CAhCA,CAiCA;AACA,WAlCA,MAkCA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,gBAAA;AACA,mBAAA,KAAA;AACA;AACA,SAvCA;AAwCA;AACA,KAnKA;AAoKA;AACA,IAAA,MArKA,oBAqKA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,WAAA,IAAA,GAAA,EAAA;AACA,WAAA,OAAA;AACA,KAzKA;AA0KA;AACA,IAAA,UA3KA,sBA2KA,KA3KA,EA2KA,GA3KA,EA2KA;AACA,WAAA,GAAA,GAAA,GAAA,CAAA,EAAA;AACA,WAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,KAhLA;AAkLA;AACA,IAAA,gBAnLA,4BAmLA,GAnLA,EAmLA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,WAAA,IAAA,CAAA,KAAA,KAAA,EAAA,WAAA,EAAA,GAAA;AACA,WAAA,OAAA;AACA;AAvLA;AA3BA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-cascades\"></i> 基础数据管理\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>设备类型</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <div class=\"container\">\r\n            <div class=\"handle-box d-flex jc-between\">\r\n                <el-button\r\n                    type=\"primary\"\r\n                    class=\"handle-del mr10\"\r\n                    @click=\"AddData\"\r\n                    icon=\"el-icon-plus\"\r\n                >新增</el-button>\r\n                <el-input\r\n                    prefix-icon=\"el-icon-search\"\r\n                    v-model.trim=\"query.msg\"\r\n                    placeholder=\"请输入您需要搜素的内容\"\r\n                    class=\"handle-input mr10\"\r\n                    @input=\"handleSearch\"\r\n                ></el-input>\r\n            </div>\r\n\r\n            <!-- 表格列 -->\r\n            <el-table\r\n                :data=\"showData\"\r\n                border\r\n                class=\"table\"\r\n                ref=\"multipleTable\"\r\n                header-cell-class-name=\"table-header\"\r\n                @selection-change=\"handleSelectionChange\"\r\n            >\r\n                <!-- 复选框 -->\r\n                <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n                <!-- 序号 -->\r\n                <el-table-column type=\"index\" label=\"序号\" width=\"55\" align=\"center\"></el-table-column>\r\n                <!-- 行业名称 -->\r\n                <el-table-column prop=\"typename\" label=\"设备类型\" align=\"center\"></el-table-column>\r\n                <!-- 创建日期 -->\r\n                <el-table-column prop=\"created_time\" label=\"创建日期\" align=\"center\">\r\n                    <template\r\n                        slot-scope=\"scope\"\r\n                    >{{scope.row.created_time | convertTime('YYYY-MM-DD HH:mm')}}</template>\r\n                </el-table-column>\r\n                <!-- 操作 -->\r\n                <el-table-column label=\"操作\" width=\"180\" align=\"center\">\r\n                    <template slot-scope=\"scope\">\r\n                        <!-- <el-button\r\n                            type=\"text\"\r\n                            icon=\"el-icon-edit\"\r\n                            @click=\"handleEdit(scope.$index, scope.row)\"\r\n                        >编辑</el-button> -->\r\n                        <el-button\r\n                            type=\"text\"\r\n                            icon=\"el-icon-delete\"\r\n                            class=\"red\"\r\n                            @click=\"handleDelete(scope.$index, scope.row)\"\r\n                        >删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n            <div class=\"pagination\">\r\n                <el-pagination\r\n                    background\r\n                    layout=\"total, prev, pager, next\"\r\n                    :current-page=\"query.pageIndex\"\r\n                    :page-size=\"query.pageSize\"\r\n                    :total=\"pageTotal\"\r\n                    @current-change=\"handlePageChange\"\r\n                ></el-pagination>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 编辑弹出框 -->\r\n        <el-dialog :title=\"isAdd?'新增':'编辑'\" :visible.sync=\"editVisible\" width=\"40%\">\r\n            <el-form ref=\"form\" :model=\"form\" label-width=\"100px\">\r\n                <el-form-item\r\n                    prop=\"typename\"\r\n                    label=\"设备类型\"\r\n                    :rules=\"{required: true, message: '请输入设备类型名称', trigger: 'blur'}\"\r\n                >\r\n                    <el-input v-model=\"form.typename\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"Cancel\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"Confirm('form')\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'DeviceType',\r\n    data() {\r\n        return {\r\n            keyword: '',\r\n            tableData: [],\r\n            showData: [],\r\n            query: {\r\n                msg: '', //关键字\r\n                date: '', //筛选日期\r\n                pageIndex: 1, //当前页数\r\n                pageSize: 10 //每页显示个数选择器的选项设置\r\n            },\r\n            editVisible: false,\r\n            pageTotal: 0,\r\n            pageIndex: 1,\r\n            pageSize: 10,\r\n            form: {},\r\n            isAdd: true,\r\n            idx: 1,\r\n            checkdelete:false\r\n        };\r\n    },\r\n    created() {\r\n        this.getData();\r\n    },\r\n\r\n    methods: {\r\n        //获取当前时间\r\n\r\n        // 获取数据\r\n        getData() {\r\n            this.$axios\r\n                .get('/dataSettings/DeviceType')\r\n                .then(res => {\r\n                    this.tableData = res.data;\r\n                    this.showData = this.tableData.slice(\r\n                        (this.query.pageIndex - 1) * this.query.pageSize,\r\n                        this.query.pageIndex * this.query.pageSize\r\n                    );\r\n                    this.pageTotal = res.data.length;\r\n                    window.console.log(res.data);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n        // 触发搜索按钮\r\n        handleSearch(value) {\r\n            this.query.pageIndex = 1;\r\n            this.showData = this.tableData.filter((item, index) => {\r\n                // return item.Address == '竹林北路256号';\r\n                for (let key in item) {\r\n                    // window.console.log(i, item[i]);\r\n                    if ((item[key] + '').includes(this.query.msg + '')) {\r\n                        return true;\r\n                    }\r\n                }\r\n            });\r\n            this.pageTotal = this.showData.length;\r\n\r\n            this.showData = this.showData.slice(\r\n                (this.query.pageIndex - 1) * this.query.pageSize,\r\n                this.query.pageIndex * this.query.pageSize\r\n            );\r\n        },\r\n\r\n         //获取设备种类关联设备表判断是否可以删除\r\n        async getDeviceTypeAndDevice(id) {\r\n            await this.$axios.post('/dataSettings/CheckDeviceTypeId', { id: id }).then(res => {\r\n                if (res.data.length !== 0) {\r\n                    this.checkdelete = false;\r\n                    console.log('>>>>>>>>>');\r\n                } else {\r\n                    this.checkdelete = true;\r\n                }\r\n            });\r\n        },\r\n        // 删除操作\r\n   async handleDelete(index, row) {\r\n       \r\n            \r\n            await this.getDeviceTypeAndDevice(row.id);\r\n            let flag = this.checkdelete;\r\n            console.log(flag);\r\n\r\n            if (!flag) {\r\n                this.$message.error('有设备关联设备种类，请解除关联后删除！');\r\n            } else {\r\n            // 二次确认删除\r\n            this.$confirm('确定要删除吗？', '提示', {\r\n                type: 'warning'\r\n            })\r\n                .then(() => {\r\n                    let query = {\r\n                        id: row.id\r\n                    };\r\n                    this.$axios.post('/dataSettings/DeleteDeviceType', query).then(res => {\r\n                        //console.log(res);\r\n                        this.pageIndex = 1;\r\n                        this.getData();\r\n                        this.$message.success('删除成功');\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n            }\r\n        },\r\n        // 多选操作\r\n        handleSelectionChange(val) {\r\n            this.multipleSelection = val;\r\n        },\r\n\r\n        //添加操作\r\n        AddData() {\r\n            this.editVisible = true;\r\n            this.isAdd = true;\r\n            this.form = {\r\n                typename: ''\r\n                // is_deleted: 0\r\n            };\r\n        },\r\n\r\n        //获取设备种类列表\r\n        getdevicetypeelist() {\r\n            let list = [];\r\n            this.tableData.forEach(element => {\r\n                list.push(element.typename);\r\n            });\r\n            return list;\r\n        },\r\n        //添加确认\r\n        Confirm(formName) {\r\n            // if (this.form.typename === '' || this.form.typename === '') {\r\n            //     this.$message.error(`设备名称不能为空`);\r\n            // } else if (this.form.typename.length > 128) {\r\n            //     this.$message.error(`设备名称过长`);\r\n            // } else {\r\n             let arrylist = this.getdevicetypeelist();\r\n            console.log(arrylist);\r\n            let temp=this.form.typename\r\n            console.log(temp);\r\n            \r\n            if (arrylist.indexOf(temp)!==-1) {\r\n                this.$message.error(`设备类型名称不能重复`);\r\n                \r\n            }else{\r\n\r\n            this.$refs[formName].validate(valid => {\r\n                if (valid) {\r\n                    if (this.isAdd) {\r\n                        // this.query.industry_name=this.form.industry_name\r\n                        // let date = new Date();\r\n                        // this.form.created_time = date.getTime();\r\n                        // console.log(date);\r\n                        this.$axios\r\n                            .post('/dataSettings/AddDeviceType', this.form)\r\n                            .then(res => {\r\n                                console.log(res.data);\r\n                                this.getData();\r\n                            })\r\n                            .catch(err => {\r\n                                console.log(err);\r\n                            });\r\n                    } else {\r\n                        this.form.id = this.idx;\r\n                        // delete this.form['created_time'];\r\n                        // let date =new Date(this.form.created_time )\r\n                        // this.form.created_time =  date.getTime();\r\n                        this.$axios\r\n                            .post('/dataSettings/updateDeviceType', this.form)\r\n                            .then(res => {\r\n                                console.log(res.data);\r\n                                this.getData();\r\n                                this.$message.success('修改成功');\r\n                            })\r\n                            .catch(err => {\r\n                                console.log(err);\r\n                            });\r\n                    }\r\n                    this.editVisible = false;\r\n                    this.form = {};\r\n                    // }\r\n                } else {\r\n                    console.log('error submit!!');\r\n                    return false;\r\n                }\r\n            });\r\n            }\r\n        },\r\n        //取消\r\n        Cancel() {\r\n            this.editVisible = false;\r\n            this.form = {};\r\n            this.getData();\r\n        },\r\n        // 编辑操作\r\n        handleEdit(index, row) {\r\n            this.idx = row.id;\r\n            this.form = JSON.parse(JSON.stringify(row));\r\n            this.editVisible = true;\r\n            this.isAdd = false;\r\n        },\r\n\r\n        // 分页导航\r\n        handlePageChange(val) {\r\n            window.console.log(val);\r\n            this.$set(this.query, 'pageIndex', val);\r\n            this.getData();\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.handle-box {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.handle-select {\r\n    width: 120px;\r\n}\r\n\r\n.handle-input {\r\n    width: 300px;\r\n    display: inline-block;\r\n}\r\n.table {\r\n    width: 100%;\r\n    font-size: 14px;\r\n}\r\n.red {\r\n    color: #ff0000;\r\n}\r\n.mr10 {\r\n    margin-right: 10px;\r\n}\r\n.table-td-thumb {\r\n    display: block;\r\n    margin: auto;\r\n    width: 40px;\r\n    height: 40px;\r\n}\r\n.datechoose {\r\n    float: right;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/DataSettings"}]}