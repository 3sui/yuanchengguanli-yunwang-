{"remainingRequest":"D:\\git\\hualiyeya\\web\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js!D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\hualiyeya\\web\\src\\components\\view\\MeasuringPointDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\git\\hualiyeya\\web\\src\\components\\view\\MeasuringPointDetails.vue","mtime":1590980248020},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Schart from 'vue-schart';\nexport default {\n  name: 'MeasuringPointDetails',\n  data: function data() {\n    return {\n      tableData: [],\n      multipleSelection: [],\n      delList: [],\n      editVisible: false,\n      pageTotal: 0,\n      form: {},\n      idx: -1,\n      id: -1,\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      query: {\n        address: '',\n        name: '',\n        pageIndex: 1,\n        pageSize: 10\n      },\n      options2: {\n        type: 'line',\n        title: {\n          text: '主机温度(℃)'\n        },\n        bgColor: '#fff',\n        labels: [],\n        datasets: [{\n          data: []\n        }],\n        legend: {\n          display: false\n        },\n        // leftPadding: 50,\n        // rightPadding: 50,\n        width: '100%'\n      },\n      value1: '',\n      value2: ''\n    };\n  },\n  components: {\n    Schart: Schart\n  },\n  computed: {},\n  created: function created() {\n    this.getData();\n  },\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      var id = this.$route.query.id;\n      var type = this.$route.query.type;\n      var label = this.$route.query.label; // this.tableData = this.$route.query.row;\n\n      window.console.log(this.tableData);\n      axios({\n        method: 'get',\n        url: '/fetchMeasuringPoint',\n        params: {\n          id: id,\n          type: type\n        }\n      }).then(function (res) {\n        var data = res.data;\n        console.log(data);\n        data.reverse();\n        var arr1 = [];\n        var arr2 = [];\n\n        for (var i in data) {\n          arr1 = arr1.concat(Object.keys(data[i]));\n          arr2 = arr2.concat(Object.values(data[i]));\n        }\n\n        console.log(arr1, arr2);\n        arr1 = arr1.map(function (item) {\n          return item.slice(6, 10);\n        });\n        _this.options2.labels = arr1;\n        _this.options2.datasets[0].data = arr2;\n        _this.options2.title.text = label;\n      }).catch();\n    },\n    // 触发搜索按钮\n    handleSearch: function handleSearch() {\n      this.$set(this.query, 'pageIndex', 1);\n      this.getData();\n    },\n    // 删除操作\n    handleDelete: function handleDelete(index, row) {\n      var _this2 = this;\n\n      // 二次确认删除\n      this.$confirm('确定要删除吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this2.$message.success('删除成功');\n\n        _this2.tableData.splice(index, 1);\n      }).catch(function () {});\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    delAllSelection: function delAllSelection() {\n      var length = this.multipleSelection.length;\n      var str = '';\n      this.delList = this.delList.concat(this.multipleSelection);\n\n      for (var i = 0; i < length; i++) {\n        str += this.multipleSelection[i].name + ' ';\n      }\n\n      this.$message.error(\"\\u5220\\u9664\\u4E86\".concat(str));\n      this.multipleSelection = [];\n    },\n    // 编辑操作\n    handleEdit: function handleEdit(index, row) {\n      this.idx = index;\n      this.form = row;\n      this.editVisible = true;\n    },\n    // 保存编辑\n    saveEdit: function saveEdit() {\n      this.editVisible = false;\n      this.$message.success(\"\\u4FEE\\u6539\\u7B2C \".concat(this.idx + 1, \" \\u884C\\u6210\\u529F\"));\n      this.$set(this.tableData, this.idx, this.form);\n    },\n    // 分页导航\n    handlePageChange: function handlePageChange(val) {\n      this.$set(this.query, 'pageIndex', val);\n      this.getData();\n    }\n  }\n};",{"version":3,"sources":["MeasuringPointDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n * @Author: your name\r\n * @Date: 2020-05-07 10:52:41\r\n * @LastEditTime: 2020-05-15 15:20:15\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 测点详情\r\n * @FilePath: \\vue-manage-system\\src\\components\\view\\MeasuringPointDetails.vue\r\n -->\r\n <template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-cascades\"></i> 远程监控\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>测点详情</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <div class=\"container\">\r\n            <el-button\r\n                type=\"primary\"\r\n                icon=\"el-icon-delete\"\r\n                class=\"handle-del mr10 mb-30\"\r\n                @click=\"$router.go(-1)\"\r\n            >返回</el-button>\r\n            <div class>\r\n                <div class=\"schart-box\">\r\n                    <!-- <div class=\"content-title\">折线图</div> -->\r\n                    <schart class=\"schart\" canvasId=\"line\" :options=\"options2\"></schart>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"handle-box\">\r\n                <el-row>\r\n                    <el-col :span=\"18\">\r\n                        <div class=\"product-status\">\r\n                            <el-input\r\n                                v-model=\"query.name\"\r\n                                placeholder=\"请输入关键字\"\r\n                                class=\"handle-input mr10\"\r\n                            ></el-input>\r\n                            <el-select\r\n                                v-model=\"query.address\"\r\n                                placeholder=\"工作状态\"\r\n                                class=\"handle-select mr10\"\r\n                            >\r\n                                <el-option key=\"1\" label=\"运行中\" value=\"运行中\"></el-option>\r\n                            </el-select>\r\n                            <div class=\"block\">\r\n                                <el-date-picker\r\n                                    class=\"mr10\"\r\n                                    v-model=\"value2\"\r\n                                    type=\"daterange\"\r\n                                    align=\"right\"\r\n                                    unlink-panels\r\n                                    range-separator=\"至\"\r\n                                    start-placeholder=\"开始日期\"\r\n                                    end-placeholder=\"结束日期\"\r\n                                    :picker-options=\"pickerOptions\"\r\n                                ></el-date-picker>\r\n                            </div>\r\n                            <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">搜索</el-button>\r\n                            <el-button style=\"float: right\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">导出</el-button>\r\n                        </div>\r\n                    </el-col>\r\n                </el-row>\r\n            </div>-->\r\n            <el-table\r\n                :data=\"tableData\"\r\n                border\r\n                class=\"table\"\r\n                ref=\"multipleTable\"\r\n                header-cell-class-name=\"table-header\"\r\n                @selection-change=\"handleSelectionChange\"\r\n            >\r\n                <!-- <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n                <el-table-column prop=\"id\" label=\"序号\" width=\"55\" align=\"center\"></el-table-column>-->\r\n                <el-table-column prop=\"DeviceID\" label=\"设备ID\"></el-table-column>\r\n                <el-table-column prop=\"DeviceName\" label=\"设备名称\"></el-table-column>\r\n                <el-table-column prop=\"DeviceClass\" label=\"设备种类\"></el-table-column>\r\n                <el-table-column prop=\"Model\" label=\"型号描述\"></el-table-column>\r\n                <el-table-column prop=\"SerialNumber\" label=\"出厂编号\"></el-table-column>\r\n            </el-table>\r\n            <!-- <div class=\"pagination\">\r\n                <el-pagination\r\n                    background\r\n                    layout=\"total, prev, pager, next\"\r\n                    :current-page=\"query.pageIndex\"\r\n                    :page-size=\"query.pageSize\"\r\n                    :total=\"pageTotal\"\r\n                    @current-change=\"handlePageChange\"\r\n                ></el-pagination>\r\n            </div>-->\r\n        </div>\r\n    </div>\r\n</template>\r\n \r\n<script>\r\nimport Schart from 'vue-schart';\r\n\r\nexport default {\r\n    name: 'MeasuringPointDetails',\r\n    data() {\r\n        return {\r\n            tableData: [],\r\n            multipleSelection: [],\r\n            delList: [],\r\n            editVisible: false,\r\n            pageTotal: 0,\r\n            form: {},\r\n            idx: -1,\r\n            id: -1,\r\n            pickerOptions: {\r\n                shortcuts: [\r\n                    {\r\n                        text: '最近一周',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n                            picker.$emit('pick', [start, end]);\r\n                        }\r\n                    },\r\n                    {\r\n                        text: '最近一个月',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n                            picker.$emit('pick', [start, end]);\r\n                        }\r\n                    },\r\n                    {\r\n                        text: '最近三个月',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                            picker.$emit('pick', [start, end]);\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            query: {\r\n                address: '',\r\n                name: '',\r\n                pageIndex: 1,\r\n                pageSize: 10\r\n            },\r\n            options2: {\r\n                type: 'line',\r\n                title: {\r\n                    text: '主机温度(℃)'\r\n                },\r\n                bgColor: '#fff',\r\n                labels: [],\r\n                datasets: [\r\n                    {\r\n                        data: []\r\n                    }\r\n                ],\r\n                legend: {\r\n                    display: false\r\n                },\r\n                // leftPadding: 50,\r\n                // rightPadding: 50,\r\n                width: '100%'\r\n            },\r\n            value1: '',\r\n            value2: ''\r\n        };\r\n    },\r\n\r\n    components: {\r\n        Schart\r\n    },\r\n\r\n    computed: {},\r\n    created() {\r\n        this.getData();\r\n    },\r\n    methods: {\r\n        getData() {\r\n            let id = this.$route.query.id;\r\n            let type = this.$route.query.type;\r\n            let label = this.$route.query.label;\r\n            // this.tableData = this.$route.query.row;\r\n            window.console.log(this.tableData);\r\n            axios({\r\n                method: 'get',\r\n                url: '/fetchMeasuringPoint',\r\n                params: {\r\n                    id,\r\n                    type\r\n                }\r\n            })\r\n                .then(res => {\r\n                    let data = res.data;\r\n                    console.log(data);\r\n\r\n                    data.reverse();\r\n                    let arr1 = [];\r\n                    let arr2 = [];\r\n                    for (let i in data) {\r\n                        arr1 = arr1.concat(Object.keys(data[i]));\r\n                        arr2 = arr2.concat(Object.values(data[i]));\r\n                    }\r\n                    console.log(arr1, arr2);\r\n                    arr1 = arr1.map(item => {\r\n                        return item.slice(6, 10);\r\n                    });\r\n                    this.options2.labels = arr1;\r\n                    this.options2.datasets[0].data = arr2;\r\n                    this.options2.title.text = label;\r\n                })\r\n                .catch();\r\n        },\r\n        // 触发搜索按钮\r\n        handleSearch() {\r\n            this.$set(this.query, 'pageIndex', 1);\r\n            this.getData();\r\n        },\r\n        // 删除操作\r\n        handleDelete(index, row) {\r\n            // 二次确认删除\r\n            this.$confirm('确定要删除吗？', '提示', {\r\n                type: 'warning'\r\n            })\r\n                .then(() => {\r\n                    this.$message.success('删除成功');\r\n                    this.tableData.splice(index, 1);\r\n                })\r\n                .catch(() => {});\r\n        },\r\n        handleSelectionChange(val) {\r\n            this.multipleSelection = val;\r\n        },\r\n        delAllSelection() {\r\n            const length = this.multipleSelection.length;\r\n            let str = '';\r\n            this.delList = this.delList.concat(this.multipleSelection);\r\n            for (let i = 0; i < length; i++) {\r\n                str += this.multipleSelection[i].name + ' ';\r\n            }\r\n            this.$message.error(`删除了${str}`);\r\n            this.multipleSelection = [];\r\n        },\r\n        // 编辑操作\r\n        handleEdit(index, row) {\r\n            this.idx = index;\r\n            this.form = row;\r\n            this.editVisible = true;\r\n        },\r\n        // 保存编辑\r\n        saveEdit() {\r\n            this.editVisible = false;\r\n            this.$message.success(`修改第 ${this.idx + 1} 行成功`);\r\n            this.$set(this.tableData, this.idx, this.form);\r\n        },\r\n        // 分页导航\r\n        handlePageChange(val) {\r\n            this.$set(this.query, 'pageIndex', val);\r\n            this.getData();\r\n        }\r\n    }\r\n};\r\n</script>\r\n<style scoped>\r\n.schart-box {\r\n    /* display: inline-block; */\r\n    margin: 0 auto;\r\n    width: 100%;\r\n}\r\n.schart {\r\n    margin: 0 auto;\r\n\r\n    width: 95%;\r\n    height: 600px;\r\n}\r\n.product-status {\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n.mt-10 {\r\n    margin-bottom: 10px;\r\n}\r\n.mr10 {\r\n    margin-right: 10px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/view"}]}