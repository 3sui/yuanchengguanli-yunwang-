{"remainingRequest":"D:\\git\\hualiyeya\\web\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js!D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\hualiyeya\\web\\src\\components\\Analysis\\IndustryAnalysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\git\\hualiyeya\\web\\src\\components\\Analysis\\IndustryAnalysis.vue","mtime":1594115102130},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar echarts = require('echarts/lib/echarts');\n\nexport default {\n  name: 'IndustryAnalysis',\n  data: function data() {\n    return {\n      datepick: '',\n      // pickerOptions: {\n      //     shortcuts: [\n      //         {\n      //             text: '最近一周',\n      //             onClick(picker) {\n      //                 const end = new Date();\n      //                 const start = new Date();\n      //                 start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n      //                 picker.$emit('pick', [start, end]);\n      //             }\n      //         },\n      //         {\n      //             text: '最近一个月',\n      //             onClick(picker) {\n      //                 const end = new Date();\n      //                 const start = new Date();\n      //                 start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n      //                 picker.$emit('pick', [start, end]);\n      //             }\n      //         },\n      //         {\n      //             text: '最近三个月',\n      //             onClick(picker) {\n      //                 const end = new Date();\n      //                 const start = new Date();\n      //                 start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n      //                 picker.$emit('pick', [start, end]);\n      //             }\n      //         }\n      //     ]\n      // },\n      industryTop: [],\n      // {\n      //     industryname: '干燥行业',\n      //     enterpriseNum: 20,\n      //     deviceNum: 200,\n      //     sort: 1\n      // },\n      // {\n      //     industryname: '液压行业',\n      //     enterpriseNum: 17,\n      //     deviceNum: 150,\n      //     sort: 2\n      // },\n      // {\n      //     industryname: '钢铁行业',\n      //     enterpriseNum: 10,\n      //     deviceNum: 80,\n      //     sort: 3\n      // },\n      // {\n      //     industryname: '电子行业',\n      //     enterpriseNum: 26,\n      //     deviceNum: 30,\n      //     sort: 4\n      // },\n      // {\n      //     industryname: '纺织行业',\n      //     enterpriseNum: 8,\n      //     deviceNum: 40,\n      //     sort: 5\n      // },\n      // {\n      //     industryname: '钣金行业',\n      //     enterpriseNum: 5,\n      //     deviceNum: 20,\n      //     sort: 6\n      // },\n      // {\n      //     industryname: '实施行业',\n      //     enterpriseNum: 8,\n      //     deviceNum: 40,\n      //     sort: 7\n      // },\n      // {\n      //     industryname: '看了行业',\n      //     enterpriseNum: 5,\n      //     deviceNum: 20,\n      //     sort: 8\n      // }\n      // ],\n      // style: ['s1', 's2', 's3', 's4'],\n      backgroundstyle: ['b1', 'b2', 'b3', 'b4', 'b5'],\n      industrylist: [],\n      devicenumlist: [],\n      enterprisenumlist: [],\n      iconlist: ['el-icon-s-platform', 'el-icon-box', 'el-icon-suitcase', 'el-icon-data-analysis', 'el-icon-pie-chart']\n    };\n  },\n  created: function created() {\n    this.getEnterprise();\n  },\n  mounted: function mounted() {\n    this.getChart2();\n  },\n  methods: {\n    //获取企业行业数据\n    getEnterprise: function getEnterprise() {\n      var _this = this;\n\n      this.$axios.get('EnterprisesByIndustry').then(function (res) {\n        if (res) {\n          _this.industryTop = res.data;\n          console.log(_this.industryTop);\n        }\n      }).then(function () {\n        _this.getdata();\n\n        _this.getChart2();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    //获取数据\n    getdata: function getdata() {\n      this.industrylist = [];\n      this.devicenumlist = [];\n      this.enterprisenumlist = [];\n\n      for (var i = 0; i < this.industryTop.length; i++) {\n        // console.log(1);\n        var item = this.industryTop[i];\n        this.industrylist.push(item.industryname);\n        this.devicenumlist.push(item.deviceNum);\n        this.enterprisenumlist.push(item.enterpriseNum);\n      } // console.log(this.industrylist)\n      //  console.log(this.devicenumlist)\n      //   console.log(this.enterprisenumlist)\n\n    },\n    //获取图表2\n    getChart2: function getChart2() {\n      // console.log(document.getElementById('byDevice'));\n      var myChart = this.$echarts.init(document.getElementById('byDevice')); // 指定图表的配置项和数据\n\n      var xData = this.industrylist; // var lineData = [100, 100, 100, 100, 100, 100, 100]\n\n      var lastYearData = this.devicenumlist;\n      var thisYearData = this.enterprisenumlist;\n      var timeLineData = [1];\n      var legend = ['设备数', '企业数'];\n      var background = '#fff'; //背景\n\n      var textColor = '#000';\n      var lineColor = 'rgba(255,255,255,0.2)';\n      var colors = [{\n        borderColor: 'rgba(238，160,60,1)',\n        start: 'rgba(238,160,60,0.8)',\n        end: 'rgba(238,160,60,0.5)'\n      }, {\n        borderColor: 'rgba(35,169,242,1)',\n        start: 'rgba(35,169,242,0.5)',\n        end: 'rgba(35,169,242,0.8)'\n      }];\n      var borderData = [];\n      var scale = 2; // borderData = xData.map(item => {\n      //     return 1;\n      // });\n\n      var option = {\n        baseOption: {\n          title: {\n            show: true,\n            text: '设备数量企业数量行业分布图',\n            left: 'left'\n          },\n          backgroundColor: background,\n          timeline: {\n            show: false,\n            top: 0,\n            data: []\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              saveAsImage: {}\n            }\n          },\n          legend: {\n            top: '5%',\n            right: '15%',\n            itemWidth: 20,\n            itemHeight: 8,\n            // itemGap: 343,\n            icon: 'horizontal',\n            textStyle: {\n              color: '#000',\n              fontSize: 16\n            },\n            data: legend\n          },\n          grid: [{\n            show: false,\n            left: '5%',\n            top: '15%',\n            bottom: '8%',\n            containLabel: true,\n            width: '37%'\n          }, {\n            show: false,\n            left: '52%',\n            top: '20%',\n            bottom: '8%',\n            //    containLabel: true,\n            width: '2%'\n          }, {\n            show: false,\n            right: '2%',\n            top: '15%',\n            bottom: '8%',\n            containLabel: true,\n            width: '37%'\n          }],\n          xAxis: [{\n            type: 'value',\n            inverse: true,\n            axisLine: {\n              show: false\n            },\n            // label: {\n            //     show: true\n            // },\n            axisTick: {\n              show: false\n            },\n            position: 'top',\n            axisLabel: {\n              show: true,\n              color: textColor\n            },\n            splitLine: {\n              show: true,\n              lineStyle: {\n                color: lineColor\n              }\n            }\n          }, {\n            gridIndex: 1,\n            show: false\n          }, {\n            gridIndex: 2,\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            position: 'top',\n            axisLabel: {\n              show: true,\n              color: textColor\n            },\n            splitLine: {\n              show: true,\n              lineStyle: {\n                color: lineColor\n              }\n            }\n          }],\n          yAxis: [{\n            type: 'category',\n            inverse: true,\n            position: 'right',\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: lineColor\n              }\n            },\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              show: false\n            },\n            data: xData\n          }, {\n            gridIndex: 1,\n            type: 'category',\n            inverse: true,\n            position: 'left',\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              show: true,\n              boundaryGap: true,\n              // top:'20%',\n              // padding: [30, 0, 0, 0],\n              textStyle: {\n                color: '#000',\n                fontSize: 14\n              },\n              align: 'center'\n            },\n            data: xData.map(function (value) {\n              return {\n                value: value,\n                textStyle: {\n                  align: 'center'\n                }\n              };\n            })\n          }, {\n            gridIndex: 2,\n            type: 'category',\n            inverse: true,\n            position: 'left',\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: lineColor\n              }\n            },\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              show: false\n            },\n            data: xData\n          }],\n          series: []\n        },\n        options: []\n      };\n      option.baseOption.timeline.data.push(timeLineData[0]);\n      option.options.push({\n        series: [{\n          name: '设备数',\n          type: 'bar',\n          barWidth: 25,\n          stack: '1',\n          itemStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n                offset: 0,\n                color: colors[0].start\n              }, {\n                offset: 1,\n                color: colors[0].end\n              }]) // label: {\n              // \tshow: true, //开启显示\n              // \tposition: 'left', //在上方显示\n              // \ttextStyle: { //数值样式\n              // \t\tcolor: 'black',\n              // \t\tfontSize: 16\n              // \t}\n              // }\n\n            }\n          },\n          label: {\n            normal: {\n              show: true,\n              position: 'left',\n              //在上方显示\n              textStyle: {\n                //数值样式\n                color: 'black',\n                fontSize: 12\n              }\n            }\n          },\n          data: lastYearData,\n          animationEasing: 'elasticOut'\n        }, // {\n        //     name: '设备数',\n        //     type: 'bar',\n        //     barWidth: 25,\n        //     stack: '1',\n        //     itemStyle: {\n        //         normal: {\n        //             color: colors[0].borderColor\n        //         }\n        //     },\n        //     data: borderData\n        // },\n        {\n          name: '企业数',\n          type: 'bar',\n          stack: '2',\n          barWidth: 25,\n          xAxisIndex: 2,\n          yAxisIndex: 2,\n          itemStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n                offset: 0,\n                color: colors[1].start\n              }, {\n                offset: 1,\n                color: colors[1].end\n              }])\n            }\n          },\n          label: {\n            normal: {\n              show: true,\n              position: 'right',\n              //在上方显示\n              textStyle: {\n                //数值样式\n                color: 'black',\n                fontSize: 12\n              }\n            }\n          },\n          data: thisYearData,\n          animationEasing: 'elasticOut'\n        } // {\n        //     name: '企业数',\n        //     type: 'bar',\n        //     xAxisIndex: 2,\n        //     yAxisIndex: 2,\n        //     barWidth: 25,\n        //     stack: '2',\n        //     itemStyle: {\n        //         normal: {\n        //             color: colors[1].borderColor\n        //         }\n        //     },\n        //     data: borderData\n        // }\n        ]\n      }); // 使用刚指定的配置项和数据显示图表。\n\n      myChart.setOption(option);\n    },\n    //刷新\n    Refresh: function Refresh() {\n      this.getEnterprise();\n    } //导出excel表\n\n  }\n};",{"version":3,"sources":["IndustryAnalysis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA,IAAA,OAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAA,WAAA,EAAA,EAlCA;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,eAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CArFA;AAsFA,MAAA,YAAA,EAAA,EAtFA;AAuFA,MAAA,aAAA,EAAA,EAvFA;AAwFA,MAAA,iBAAA,EAAA,EAxFA;AAyFA,MAAA,QAAA,EAAA,CAAA,oBAAA,EAAA,aAAA,EAAA,kBAAA,EAAA,uBAAA,EAAA,mBAAA;AAzFA,KAAA;AA2FA,GA9FA;AA+FA,EAAA,OA/FA,qBA+FA;AACA,SAAA,aAAA;AACA,GAjGA;AAmGA,EAAA,OAnGA,qBAmGA;AACA,SAAA,SAAA;AACA,GArGA;AAsGA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,aAFA,2BAEA;AAAA;;AACA,WAAA,MAAA,CACA,GADA,CACA,uBADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,WAAA;AACA;AACA,OAPA,EAQA,IARA,CAQA,YAAA;AACA,QAAA,KAAA,CAAA,OAAA;;AACA,QAAA,KAAA,CAAA,SAAA;AACA,OAXA,EAaA,KAbA,CAaA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,OAfA;AAgBA,KAnBA;AAqBA;AACA,IAAA,OAtBA,qBAsBA;AACA,WAAA,YAAA,GAAA,EAAA;AACA,WAAA,aAAA,GAAA,EAAA;AACA,WAAA,iBAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,WAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA;AACA,YAAA,IAAA,GAAA,KAAA,WAAA,CAAA,CAAA,CAAA;AACA,aAAA,YAAA,CAAA,IAAA,CAAA,IAAA,CAAA,YAAA;AACA,aAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAAA,SAAA;AACA,aAAA,iBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,aAAA;AACA,OAVA,CAWA;AACA;AACA;;AACA,KApCA;AAsCA;AACA,IAAA,SAvCA,uBAuCA;AACA;AACA,UAAA,OAAA,GAAA,KAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,UAAA,CAAA,CAAA,CAFA,CAGA;;AACA,UAAA,KAAA,GAAA,KAAA,YAAA,CAJA,CAKA;;AACA,UAAA,YAAA,GAAA,KAAA,aAAA;AACA,UAAA,YAAA,GAAA,KAAA,iBAAA;AACA,UAAA,YAAA,GAAA,CAAA,CAAA,CAAA;AACA,UAAA,MAAA,GAAA,CAAA,KAAA,EAAA,KAAA,CAAA;AACA,UAAA,UAAA,GAAA,MAAA,CAVA,CAUA;;AACA,UAAA,SAAA,GAAA,MAAA;AACA,UAAA,SAAA,GAAA,uBAAA;AACA,UAAA,MAAA,GAAA,CACA;AACA,QAAA,WAAA,EAAA,oBADA;AAEA,QAAA,KAAA,EAAA,sBAFA;AAGA,QAAA,GAAA,EAAA;AAHA,OADA,EAMA;AACA,QAAA,WAAA,EAAA,oBADA;AAEA,QAAA,KAAA,EAAA,sBAFA;AAGA,QAAA,GAAA,EAAA;AAHA,OANA,CAAA;AAYA,UAAA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,GAAA,CAAA,CA1BA,CA2BA;AACA;AACA;;AACA,UAAA,MAAA,GAAA;AACA,QAAA,UAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA,IADA;AAEA,YAAA,IAAA,EAAA,eAFA;AAGA,YAAA,IAAA,EAAA;AAHA,WADA;AAMA,UAAA,eAAA,EAAA,UANA;AAOA,UAAA,QAAA,EAAA;AACA,YAAA,IAAA,EAAA,KADA;AAEA,YAAA,GAAA,EAAA,CAFA;AAGA,YAAA,IAAA,EAAA;AAHA,WAPA;AAYA,UAAA,OAAA,EAAA;AACA,YAAA,IAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA;AACA,cAAA,WAAA,EAAA;AADA;AAFA,WAZA;AAkBA,UAAA,MAAA,EAAA;AACA,YAAA,GAAA,EAAA,IADA;AAEA,YAAA,KAAA,EAAA,KAFA;AAGA,YAAA,SAAA,EAAA,EAHA;AAIA,YAAA,UAAA,EAAA,CAJA;AAKA;AACA,YAAA,IAAA,EAAA,YANA;AAOA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA,MADA;AAEA,cAAA,QAAA,EAAA;AAFA,aAPA;AAWA,YAAA,IAAA,EAAA;AAXA,WAlBA;AA+BA,UAAA,IAAA,EAAA,CACA;AACA,YAAA,IAAA,EAAA,KADA;AAEA,YAAA,IAAA,EAAA,IAFA;AAGA,YAAA,GAAA,EAAA,KAHA;AAIA,YAAA,MAAA,EAAA,IAJA;AAKA,YAAA,YAAA,EAAA,IALA;AAMA,YAAA,KAAA,EAAA;AANA,WADA,EASA;AACA,YAAA,IAAA,EAAA,KADA;AAEA,YAAA,IAAA,EAAA,KAFA;AAGA,YAAA,GAAA,EAAA,KAHA;AAIA,YAAA,MAAA,EAAA,IAJA;AAKA;AACA,YAAA,KAAA,EAAA;AANA,WATA,EAiBA;AACA,YAAA,IAAA,EAAA,KADA;AAEA,YAAA,KAAA,EAAA,IAFA;AAGA,YAAA,GAAA,EAAA,KAHA;AAIA,YAAA,MAAA,EAAA,IAJA;AAKA,YAAA,YAAA,EAAA,IALA;AAMA,YAAA,KAAA,EAAA;AANA,WAjBA,CA/BA;AAyDA,UAAA,KAAA,EAAA,CACA;AACA,YAAA,IAAA,EAAA,OADA;AAEA,YAAA,OAAA,EAAA,IAFA;AAGA,YAAA,QAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA,aAHA;AAMA;AACA;AACA;AACA,YAAA,QAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA,aATA;AAYA,YAAA,QAAA,EAAA,KAZA;AAaA,YAAA,SAAA,EAAA;AACA,cAAA,IAAA,EAAA,IADA;AAEA,cAAA,KAAA,EAAA;AAFA,aAbA;AAiBA,YAAA,SAAA,EAAA;AACA,cAAA,IAAA,EAAA,IADA;AAEA,cAAA,SAAA,EAAA;AACA,gBAAA,KAAA,EAAA;AADA;AAFA;AAjBA,WADA,EAyBA;AACA,YAAA,SAAA,EAAA,CADA;AAEA,YAAA,IAAA,EAAA;AAFA,WAzBA,EA8BA;AACA,YAAA,SAAA,EAAA,CADA;AAEA,YAAA,QAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA,aAFA;AAKA,YAAA,QAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA,aALA;AAQA,YAAA,QAAA,EAAA,KARA;AASA,YAAA,SAAA,EAAA;AACA,cAAA,IAAA,EAAA,IADA;AAEA,cAAA,KAAA,EAAA;AAFA,aATA;AAaA,YAAA,SAAA,EAAA;AACA,cAAA,IAAA,EAAA,IADA;AAEA,cAAA,SAAA,EAAA;AACA,gBAAA,KAAA,EAAA;AADA;AAFA;AAbA,WA9BA,CAzDA;AA4GA,UAAA,KAAA,EAAA,CACA;AACA,YAAA,IAAA,EAAA,UADA;AAEA,YAAA,OAAA,EAAA,IAFA;AAGA,YAAA,QAAA,EAAA,OAHA;AAIA,YAAA,QAAA,EAAA;AACA,cAAA,IAAA,EAAA,IADA;AAEA,cAAA,SAAA,EAAA;AACA,gBAAA,KAAA,EAAA;AADA;AAFA,aAJA;AAWA,YAAA,QAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA,aAXA;AAcA,YAAA,SAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA,aAdA;AAiBA,YAAA,IAAA,EAAA;AAjBA,WADA,EAoBA;AACA,YAAA,SAAA,EAAA,CADA;AAEA,YAAA,IAAA,EAAA,UAFA;AAGA,YAAA,OAAA,EAAA,IAHA;AAIA,YAAA,QAAA,EAAA,MAJA;AAKA,YAAA,QAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA,aALA;AAQA,YAAA,QAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA,aARA;AAWA,YAAA,SAAA,EAAA;AACA,cAAA,IAAA,EAAA,IADA;AAEA,cAAA,WAAA,EAAA,IAFA;AAGA;AACA;AACA,cAAA,SAAA,EAAA;AACA,gBAAA,KAAA,EAAA,MADA;AAEA,gBAAA,QAAA,EAAA;AAFA,eALA;AASA,cAAA,KAAA,EAAA;AATA,aAXA;AAsBA,YAAA,IAAA,EAAA,KAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,qBAAA;AACA,gBAAA,KAAA,EAAA,KADA;AAEA,gBAAA,SAAA,EAAA;AACA,kBAAA,KAAA,EAAA;AADA;AAFA,eAAA;AAMA,aAPA;AAtBA,WApBA,EAmDA;AACA,YAAA,SAAA,EAAA,CADA;AAEA,YAAA,IAAA,EAAA,UAFA;AAGA,YAAA,OAAA,EAAA,IAHA;AAIA,YAAA,QAAA,EAAA,MAJA;AAKA,YAAA,QAAA,EAAA;AACA,cAAA,IAAA,EAAA,IADA;AAEA,cAAA,SAAA,EAAA;AACA,gBAAA,KAAA,EAAA;AADA;AAFA,aALA;AAWA,YAAA,QAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA,aAXA;AAcA,YAAA,SAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA,aAdA;AAiBA,YAAA,IAAA,EAAA;AAjBA,WAnDA,CA5GA;AAmLA,UAAA,MAAA,EAAA;AAnLA,SADA;AAsLA,QAAA,OAAA,EAAA;AAtLA,OAAA;AAyLA,MAAA,MAAA,CAAA,UAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,CAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,MAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA,KADA;AAEA,UAAA,IAAA,EAAA,KAFA;AAGA,UAAA,QAAA,EAAA,EAHA;AAIA,UAAA,KAAA,EAAA,GAJA;AAKA,UAAA,SAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,KAAA,EAAA,IAAA,OAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CACA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAFA,eADA,EAKA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAFA,eALA,CAAA,CADA,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnBA;AADA,WALA;AA8BA,UAAA,KAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,IAAA,EAAA,IADA;AAEA,cAAA,QAAA,EAAA,MAFA;AAEA;AACA,cAAA,SAAA,EAAA;AAAA;AACA,gBAAA,KAAA,EAAA,OADA;AAEA,gBAAA,QAAA,EAAA;AAFA;AAHA;AADA,WA9BA;AAuCA,UAAA,IAAA,EAAA,YAvCA;AAwCA,UAAA,eAAA,EAAA;AAxCA,SADA,EA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,IAAA,EAAA,KADA;AAEA,UAAA,IAAA,EAAA,KAFA;AAGA,UAAA,KAAA,EAAA,GAHA;AAIA,UAAA,QAAA,EAAA,EAJA;AAKA,UAAA,UAAA,EAAA,CALA;AAMA,UAAA,UAAA,EAAA,CANA;AAOA,UAAA,SAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,KAAA,EAAA,IAAA,OAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CACA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAFA,eADA,EAKA;AACA,gBAAA,MAAA,EAAA,CADA;AAEA,gBAAA,KAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAFA,eALA,CAAA;AADA;AADA,WAPA;AAqBA,UAAA,KAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,IAAA,EAAA,IADA;AAEA,cAAA,QAAA,EAAA,OAFA;AAEA;AACA,cAAA,SAAA,EAAA;AAAA;AACA,gBAAA,KAAA,EAAA,OADA;AAEA,gBAAA,QAAA,EAAA;AAFA;AAHA;AADA,WArBA;AA8BA,UAAA,IAAA,EAAA,YA9BA;AA+BA,UAAA,eAAA,EAAA;AA/BA,SAvDA,CAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArGA;AADA,OAAA,EAxNA,CAkUA;;AACA,MAAA,OAAA,CAAA,SAAA,CAAA,MAAA;AACA,KA3WA;AA6WA;AACA,IAAA,OA9WA,qBA8WA;AACA,WAAA,aAAA;AACA,KAhXA,CAkXA;;AAlXA;AAtGA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-cascades\"></i> 分析中心\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>行业分析</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <div class=\"container\">\r\n            <!-- <el-row :gutter=\"20\" class=\"mgb20\">\r\n                <el-col :span=\"6\">\r\n                    <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"Refresh\">刷新</el-button>\r\n                    <el-button type=\"primary\" icon=\"el-icon-download\" @click=\"Download\">导出报表</el-button>\r\n                </el-col>\r\n            </el-row>-->\r\n            <!-- </div>\r\n\r\n            <div class=\"container\">-->\r\n            <el-row :gutter=\"20\" type=\"flex\">\r\n                <el-col  v-for=\"(industry,index) in industryTop\" :key=\"index\" v-if=\"index<5\"  >\r\n                    <!-- <el-card shadow=\"hover\" :body-style=\"{padding: '0px'}\" v-if=\"index<5\">\r\n                        <div class=\"grid-content grid-con\">\r\n                            <div\r\n                                class=\"card-title\"\r\n                                :class=\"backgroundstyle[index]\"\r\n                            >{{industry.industryname}}</div>\r\n                            <!-- <i\r\n                                class=\"grid-con-icon\"\r\n                                :class=\"backgroundstyle[index]\"\r\n                            >{{industry.sort}}</i>-->\r\n                            <!-- <div class=\"grid-cont-right\"> -->\r\n                                <!-- <el-row>\r\n                                    <div\r\n                                        class=\"card-title\"\r\n                                        :class=\"style[index]\"\r\n                                    >{{industry.industryname}}</div>\r\n                                </el-row>-->\r\n                                <!-- <el-row :gutter=\"24\">\r\n                                    <el-col :span=\"12\">\r\n                                        <div\r\n                                            :class=\"style[index]\"\r\n                                            class=\"grid-num\"\r\n                                        >{{industry.enterpriseNum}}</div>\r\n                                        <div class=\"grid_dev\">企业数</div>\r\n                                    </el-col>\r\n                                    <el-col :span=\"12\">\r\n                                        <div\r\n                                            :class=\"style[index]\"\r\n                                            class=\"grid-num\"\r\n                                        >{{industry.deviceNum}}</div>\r\n                                        <div class=\"grid_dev\">设备数</div>\r\n                                    </el-col>\r\n                                </el-row>\r\n                            </div>\r\n                        </div>\r\n                    </el-card>  -->\r\n                    <el-card\r\n                        shadow=\"hover\"\r\n                        :body-style=\"{padding: '0px'}\"\r\n                        :class=\"backgroundstyle[index]\"\r\n                    \r\n                        class=\"elcard\"\r\n                    >\r\n                        <el-row :gutter=\"20\">\r\n                            <el-col :span=\"6\" :offset=\"2\">\r\n                                <span class=\"grid-content\">\r\n                                    <i :class=\"iconlist[index]\"></i>\r\n                                </span>\r\n                            </el-col>\r\n                            <el-col :span=\"7\" :offset=\"1\">\r\n                                <span class=\"grid-cont-right\">\r\n                                    <div class=\"grid-num\">{{industry.deviceNum}}</div>\r\n                                    <div class=\"grid_dev\">设备数</div>\r\n                                </span>\r\n                            </el-col>\r\n                             <el-col :span=\"7\" :offset=\"1\">\r\n                                <span class=\"grid-cont-right\">\r\n                                    <div class=\"grid-num\">{{industry.enterpriseNum}}</div>\r\n                                    <div class=\"grid_dev\">企业数</div>\r\n                                </span>\r\n                            </el-col>\r\n                        </el-row>\r\n\r\n                        <div class=\"card-title\">{{industry.industryname}}</div>\r\n                    </el-card>\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n        <div class=\"container\" style=\"margin-top:10px\">\r\n            <el-row :gutter=\"20\" class=\"mgb20\">\r\n                <el-col :span=\"12\">\r\n                    <!-- <div id=\"byEnterprise\" style=\"height: 460px; width: 100%;\"></div> -->\r\n                    <el-table :data=\"industryTop\" height=\"480px\" border style=\"width: 100%\">\r\n                        <el-table-column prop=\"sort\" label=\"序号\" width=\"180\" align=\"center\"></el-table-column>\r\n                        <el-table-column\r\n                            prop=\"industryname\"\r\n                            label=\"行业名称\"\r\n                            width=\"180\"\r\n                            align=\"center\"\r\n                        ></el-table-column>\r\n                        <el-table-column prop=\"enterpriseNum\" label=\"企业数\" align=\"center\"></el-table-column>\r\n                        <el-table-column prop=\"deviceNum\" label=\"设备数\" align=\"center\"></el-table-column>\r\n                    </el-table>\r\n                </el-col>\r\n\r\n                <el-col :span=\"12\">\r\n                    <div id=\"byDevice\" style=\"height: 480px; width: 100%;\"></div>\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nlet echarts = require('echarts/lib/echarts');\r\nexport default {\r\n    name: 'IndustryAnalysis',\r\n    data() {\r\n        return {\r\n            datepick: '',\r\n            // pickerOptions: {\r\n            //     shortcuts: [\r\n            //         {\r\n            //             text: '最近一周',\r\n            //             onClick(picker) {\r\n            //                 const end = new Date();\r\n            //                 const start = new Date();\r\n            //                 start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n            //                 picker.$emit('pick', [start, end]);\r\n            //             }\r\n            //         },\r\n            //         {\r\n            //             text: '最近一个月',\r\n            //             onClick(picker) {\r\n            //                 const end = new Date();\r\n            //                 const start = new Date();\r\n            //                 start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n            //                 picker.$emit('pick', [start, end]);\r\n            //             }\r\n            //         },\r\n            //         {\r\n            //             text: '最近三个月',\r\n            //             onClick(picker) {\r\n            //                 const end = new Date();\r\n            //                 const start = new Date();\r\n            //                 start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n            //                 picker.$emit('pick', [start, end]);\r\n            //             }\r\n            //         }\r\n            //     ]\r\n            // },\r\n\r\n            industryTop: [],\r\n            // {\r\n            //     industryname: '干燥行业',\r\n            //     enterpriseNum: 20,\r\n            //     deviceNum: 200,\r\n            //     sort: 1\r\n            // },\r\n            // {\r\n            //     industryname: '液压行业',\r\n            //     enterpriseNum: 17,\r\n            //     deviceNum: 150,\r\n            //     sort: 2\r\n            // },\r\n            // {\r\n            //     industryname: '钢铁行业',\r\n            //     enterpriseNum: 10,\r\n            //     deviceNum: 80,\r\n            //     sort: 3\r\n            // },\r\n            // {\r\n            //     industryname: '电子行业',\r\n            //     enterpriseNum: 26,\r\n            //     deviceNum: 30,\r\n            //     sort: 4\r\n            // },\r\n            // {\r\n            //     industryname: '纺织行业',\r\n            //     enterpriseNum: 8,\r\n            //     deviceNum: 40,\r\n            //     sort: 5\r\n            // },\r\n            // {\r\n            //     industryname: '钣金行业',\r\n            //     enterpriseNum: 5,\r\n            //     deviceNum: 20,\r\n            //     sort: 6\r\n            // },\r\n            // {\r\n            //     industryname: '实施行业',\r\n            //     enterpriseNum: 8,\r\n            //     deviceNum: 40,\r\n            //     sort: 7\r\n            // },\r\n            // {\r\n            //     industryname: '看了行业',\r\n            //     enterpriseNum: 5,\r\n            //     deviceNum: 20,\r\n            //     sort: 8\r\n            // }\r\n            // ],\r\n            // style: ['s1', 's2', 's3', 's4'],\r\n            backgroundstyle: ['b1', 'b2', 'b3', 'b4', 'b5'],\r\n            industrylist: [],\r\n            devicenumlist: [],\r\n            enterprisenumlist: [],\r\n            iconlist: ['el-icon-s-platform', 'el-icon-box', 'el-icon-suitcase', 'el-icon-data-analysis', 'el-icon-pie-chart']\r\n        };\r\n    },\r\n    created() {\r\n        this.getEnterprise();\r\n    },\r\n\r\n    mounted() {\r\n        this.getChart2();\r\n    },\r\n    methods: {\r\n        //获取企业行业数据\r\n        getEnterprise() {\r\n            this.$axios\r\n                .get('EnterprisesByIndustry')\r\n                .then(res => {\r\n                    if (res) {\r\n                        this.industryTop = res.data;\r\n                        console.log(this.industryTop);\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    this.getdata();\r\n                    this.getChart2();\r\n                })\r\n\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n\r\n        //获取数据\r\n        getdata() {\r\n            this.industrylist = [];\r\n            this.devicenumlist = [];\r\n            this.enterprisenumlist = [];\r\n            for (let i = 0; i < this.industryTop.length; i++) {\r\n                // console.log(1);\r\n                let item = this.industryTop[i];\r\n                this.industrylist.push(item.industryname);\r\n                this.devicenumlist.push(item.deviceNum);\r\n                this.enterprisenumlist.push(item.enterpriseNum);\r\n            }\r\n            // console.log(this.industrylist)\r\n            //  console.log(this.devicenumlist)\r\n            //   console.log(this.enterprisenumlist)\r\n        },\r\n\r\n        //获取图表2\r\n        getChart2() {\r\n            // console.log(document.getElementById('byDevice'));\r\n            let myChart = this.$echarts.init(document.getElementById('byDevice'));\r\n            // 指定图表的配置项和数据\r\n            var xData = this.industrylist;\r\n            // var lineData = [100, 100, 100, 100, 100, 100, 100]\r\n            var lastYearData = this.devicenumlist;\r\n            var thisYearData = this.enterprisenumlist;\r\n            var timeLineData = [1];\r\n            let legend = ['设备数', '企业数'];\r\n            var background = '#fff'; //背景\r\n            let textColor = '#000';\r\n            let lineColor = 'rgba(255,255,255,0.2)';\r\n            let colors = [\r\n                {\r\n                    borderColor: 'rgba(238，160,60,1)',\r\n                    start: 'rgba(238,160,60,0.8)',\r\n                    end: 'rgba(238,160,60,0.5)'\r\n                },\r\n                {\r\n                    borderColor: 'rgba(35,169,242,1)',\r\n                    start: 'rgba(35,169,242,0.5)',\r\n                    end: 'rgba(35,169,242,0.8)'\r\n                }\r\n            ];\r\n            let borderData = [];\r\n            let scale = 2;\r\n            // borderData = xData.map(item => {\r\n            //     return 1;\r\n            // });\r\n            var option = {\r\n                baseOption: {\r\n                    title: {\r\n                        show: true,\r\n                        text: '设备数量企业数量行业分布图',\r\n                        left: 'left'\r\n                    },\r\n                    backgroundColor: background,\r\n                    timeline: {\r\n                        show: false,\r\n                        top: 0,\r\n                        data: []\r\n                    },\r\n                    toolbox: {\r\n                        show: true,\r\n                        feature: {\r\n                            saveAsImage: {}\r\n                        }\r\n                    },\r\n                    legend: {\r\n                        top: '5%',\r\n                        right: '15%',\r\n                        itemWidth: 20,\r\n                        itemHeight: 8,\r\n                        // itemGap: 343,\r\n                        icon: 'horizontal',\r\n                        textStyle: {\r\n                            color: '#000',\r\n                            fontSize: 16\r\n                        },\r\n                        data: legend\r\n                    },\r\n                    grid: [\r\n                        {\r\n                            show: false,\r\n                            left: '5%',\r\n                            top: '15%',\r\n                            bottom: '8%',\r\n                            containLabel: true,\r\n                            width: '37%'\r\n                        },\r\n                        {\r\n                            show: false,\r\n                            left: '52%',\r\n                            top: '20%',\r\n                            bottom: '8%',\r\n                            //    containLabel: true,\r\n                            width: '2%'\r\n                        },\r\n                        {\r\n                            show: false,\r\n                            right: '2%',\r\n                            top: '15%',\r\n                            bottom: '8%',\r\n                            containLabel: true,\r\n                            width: '37%'\r\n                        }\r\n                    ],\r\n                    xAxis: [\r\n                        {\r\n                            type: 'value',\r\n                            inverse: true,\r\n                            axisLine: {\r\n                                show: false\r\n                            },\r\n                            // label: {\r\n                            //     show: true\r\n                            // },\r\n                            axisTick: {\r\n                                show: false\r\n                            },\r\n                            position: 'top',\r\n                            axisLabel: {\r\n                                show: true,\r\n                                color: textColor\r\n                            },\r\n                            splitLine: {\r\n                                show: true,\r\n                                lineStyle: {\r\n                                    color: lineColor\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            gridIndex: 1,\r\n                            show: false,\r\n                          \r\n                        },\r\n                        {\r\n                            gridIndex: 2,\r\n                            axisLine: {\r\n                                show: false\r\n                            },\r\n                            axisTick: {\r\n                                show: false\r\n                            },\r\n                            position: 'top',\r\n                            axisLabel: {\r\n                                show: true,\r\n                                color: textColor\r\n                            },\r\n                            splitLine: {\r\n                                show: true,\r\n                                lineStyle: {\r\n                                    color: lineColor\r\n                                }\r\n                            }\r\n                        }\r\n                    ],\r\n                    yAxis: [\r\n                        {\r\n                            type: 'category',\r\n                            inverse: true,\r\n                            position: 'right',\r\n                            axisLine: {\r\n                                show: true,\r\n                                lineStyle: {\r\n                                    color: lineColor\r\n                                }\r\n                            },\r\n\r\n                            axisTick: {\r\n                                show: false\r\n                            },\r\n                            axisLabel: {\r\n                                show: false\r\n                            },\r\n                            data: xData\r\n                        },\r\n                        {\r\n                            gridIndex: 1,\r\n                            type: 'category',\r\n                            inverse: true,\r\n                            position: 'left',\r\n                            axisLine: {\r\n                                show: false\r\n                            },\r\n                            axisTick: {\r\n                                show: false\r\n                            },\r\n                            axisLabel: {\r\n                                show: true,\r\n                                boundaryGap:true,\r\n                                // top:'20%',\r\n                                // padding: [30, 0, 0, 0],\r\n                                textStyle: {\r\n                                    color: '#000',\r\n                                    fontSize: 14\r\n                                },\r\n                                align: 'center'\r\n                            },\r\n                            data: xData.map(function(value) {\r\n                                return {\r\n                                    value: value,\r\n                                    textStyle: {\r\n                                        align: 'center'\r\n                                    }\r\n                                };\r\n                            })\r\n                        },\r\n                        {\r\n                            gridIndex: 2,\r\n                            type: 'category',\r\n                            inverse: true,\r\n                            position: 'left',\r\n                            axisLine: {\r\n                                show: true,\r\n                                lineStyle: {\r\n                                    color: lineColor\r\n                                }\r\n                            },\r\n                            axisTick: {\r\n                                show: false\r\n                            },\r\n                            axisLabel: {\r\n                                show: false\r\n                            },\r\n                            data: xData\r\n                        }\r\n                    ],\r\n                    series: []\r\n                },\r\n                options: []\r\n            };\r\n\r\n            option.baseOption.timeline.data.push(timeLineData[0]);\r\n            option.options.push({\r\n                series: [\r\n                    {\r\n                        name: '设备数',\r\n                        type: 'bar',\r\n                        barWidth: 25,\r\n                        stack: '1',\r\n                        itemStyle: {\r\n                            normal: {\r\n                                color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                                    {\r\n                                        offset: 0,\r\n                                        color: colors[0].start\r\n                                    },\r\n                                    {\r\n                                        offset: 1,\r\n                                        color: colors[0].end\r\n                                    }\r\n                                ]),\r\n                              \r\n\t\t\t\t\t\t\t\t// label: {\r\n\t\t\t\t\t\t\t\t// \tshow: true, //开启显示\r\n\t\t\t\t\t\t\t\t// \tposition: 'left', //在上方显示\r\n\t\t\t\t\t\t\t\t// \ttextStyle: { //数值样式\r\n\t\t\t\t\t\t\t\t// \t\tcolor: 'black',\r\n\t\t\t\t\t\t\t\t// \t\tfontSize: 16\r\n\t\t\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\r\n\r\n                            }\r\n                        },\r\n                        label: {\r\n                            normal: {\r\n                                show: true,\r\n                                \tposition: 'left', //在上方显示\r\n\t\t\t\t\t\t\t\t\ttextStyle: { //数值样式\r\n\t\t\t\t\t\t\t\t\t\tcolor: 'black',\r\n\t\t\t\t\t\t\t\t\t\tfontSize: 12}\r\n                            }\r\n                        },\r\n                        data: lastYearData,\r\n                        animationEasing: 'elasticOut'\r\n                    },\r\n                    // {\r\n                    //     name: '设备数',\r\n                    //     type: 'bar',\r\n                    //     barWidth: 25,\r\n                    //     stack: '1',\r\n                    //     itemStyle: {\r\n                    //         normal: {\r\n                    //             color: colors[0].borderColor\r\n                    //         }\r\n                    //     },\r\n                    //     data: borderData\r\n                    // },\r\n                    {\r\n                        name: '企业数',\r\n                        type: 'bar',\r\n                        stack: '2',\r\n                        barWidth: 25,\r\n                        xAxisIndex: 2,\r\n                        yAxisIndex: 2,\r\n                        itemStyle: {\r\n                            normal: {\r\n                                color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                                    {\r\n                                        offset: 0,\r\n                                        color: colors[1].start\r\n                                    },\r\n                                    {\r\n                                        offset: 1,\r\n                                        color: colors[1].end\r\n                                    }\r\n                                ])\r\n                            }\r\n                        },\r\n                        label: {\r\n                            normal: {\r\n                                show: true,\r\n                                position: 'right', //在上方显示\r\n\t\t\t\t\t\t\t\t\ttextStyle: { //数值样式\r\n\t\t\t\t\t\t\t\t\t\tcolor: 'black',\r\n\t\t\t\t\t\t\t\t\t\tfontSize: 12}\r\n                            }\r\n                        },\r\n                        data: thisYearData,\r\n                        animationEasing: 'elasticOut'\r\n                    }\r\n                    // {\r\n                    //     name: '企业数',\r\n                    //     type: 'bar',\r\n                    //     xAxisIndex: 2,\r\n                    //     yAxisIndex: 2,\r\n                    //     barWidth: 25,\r\n                    //     stack: '2',\r\n                    //     itemStyle: {\r\n                    //         normal: {\r\n                    //             color: colors[1].borderColor\r\n                    //         }\r\n                    //     },\r\n                    //     data: borderData\r\n                    // }\r\n                ]\r\n            });\r\n\r\n            // 使用刚指定的配置项和数据显示图表。\r\n            myChart.setOption(option);\r\n        },\r\n\r\n        //刷新\r\n        Refresh() {\r\n            this.getEnterprise();\r\n        }\r\n\r\n        //导出excel表\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* .el-row {\r\n    margin-bottom: 20px;\r\n} */\r\n\r\n.grid-content {\r\n    height: 70px;\r\n    line-height: 70px;\r\n    font-size: 50px;\r\n    color: white;\r\n}\r\n\r\n.grid-cont-right {\r\n    flex: 1;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    color: #999;\r\n    height: 120px;\r\n}\r\n\r\n.elcard {\r\n    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);\r\n    font-family: 'open sans';\r\n    border-radius: 10px;\r\n    padding-top:10px ;\r\n}\r\n.grid-num {\r\n    color: white;\r\n    font-size: 30px;\r\n    font-weight: 500;\r\n    /* margin-bottom: 10px; */\r\n    height: 50px;\r\n    line-height: 50px;\r\n    font-family: 'open sans';\r\n    text-align: left;\r\n}\r\n.grid_dev {\r\n    font-size: 14px;\r\n    height: 20px;\r\n    line-height: 20px;\r\n    color: white;\r\n    text-align: left;\r\n    font-weight: 500;\r\n}\r\n\r\n.grid-con-icon {\r\n    font-size: 50px;\r\n    width: 120px;\r\n    height: 120px;\r\n    text-align: center;\r\n    line-height: 120px;\r\n    color: #fff;\r\n}\r\n.card-title {\r\n    text-align: left;\r\n    font-size: 20px;\r\n    /* font-weight: bold; */\r\n    color: white;\r\n    letter-spacing: 0.2em;\r\n    /* width: 50%; */\r\n    line-height: 50px;\r\n    height: 50px;\r\n    /* padding-left: 25px; */\r\n    font-family: 'open sans';\r\n    text-align: center;\r\n    /* background-color: #f0f0f0; */\r\n}\r\n\r\n.s1 {\r\n    color: #eb6379;\r\n}\r\n\r\n.s3 {\r\n    color: #eea03c;\r\n}\r\n\r\n.s2 {\r\n    color: darkturquoise;\r\n}\r\n\r\n.s4 {\r\n    color: #69d3ab;\r\n}\r\n.b1 {\r\n    /* background-color: #13aaf9; */\r\n    background-image: linear-gradient(90deg, #13aaee, #13aaff);\r\n}\r\n\r\n.b2 {\r\n    /* background-color: #968cec; */\r\n    background-image: linear-gradient(90deg, #968cdd, #968cee);\r\n}\r\n\r\n.b4 {\r\n    /* background-color: darkturquoise; */\r\n    background-image: linear-gradient(90deg, #00cedd, #00ceee);\r\n}\r\n\r\n.b3 {\r\n    /* background-color: #f5a1e2; */\r\n    background-image: linear-gradient(90deg, #f5a1dd, #f5a1ee);\r\n}\r\n.b5 {\r\n    /* background-color: #f8bb90; */\r\n    background-image: linear-gradient(90deg, #f8bb88, #f8bb99);\r\n}\r\n.container {\r\n    padding-top: 15px;\r\n    padding-bottom: 15px;\r\n}\r\n</style>"],"sourceRoot":"src/components/Analysis"}]}