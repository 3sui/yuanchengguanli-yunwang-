{"remainingRequest":"D:\\git\\hualiyeya\\web\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js!D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\hualiyeya\\web\\src\\components\\deviceRecord\\ProductDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\git\\hualiyeya\\web\\src\\components\\deviceRecord\\ProductDetails.vue","mtime":1594190522345},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:/git/hualiyeya/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SparkMD5 from 'spark-md5';\nexport default {\n  name: 'productDetails',\n  data: function data() {\n    return {\n      tableData: {},\n      maintenanceList: [],\n      srcList: [],\n      fileListWord: [],\n      percentage1: 0,\n      percentage2: 0\n    };\n  },\n  created: function created() {\n    this.getDeviceIDAndInfo();\n  },\n  components: {},\n  computed: {},\n  methods: {\n    getDeviceIDAndInfo: function getDeviceIDAndInfo() {\n      var _this2 = this;\n\n      window.console.log(this.$route.query.id);\n      axios({\n        method: 'get',\n        url: '/device/getDeviceInfo',\n        params: {\n          id: this.$route.query.id\n        }\n      }).then(function (res) {\n        window.console.log(res.data);\n\n        if (res.data.success) {\n          _this2.$set(_this2.tableData, 'info', res.data.info[0]);\n\n          _this2.$set(_this2.tableData, 'imgList', res.data.imgList);\n\n          _this2.$set(_this2.tableData, 'wordList', res.data.wordList);\n\n          _this2.$set(_this2.tableData, 'repair', res.data.repair);\n\n          res.data.imgList.forEach(function (item) {\n            _this2.srcList.push(axios.defaults.baseURL.slice(0, -4) + item.file_path.split('.').shift() || '');\n          }); // this.tableData.info = res.data.info[0];\n\n          window.console.log(_this2.tableData);\n        }\n      }).catch();\n    },\n    handleExceed3: function handleExceed3(files, fileList) {\n      this.$message.warning(\"\\u5F53\\u524D\\u9650\\u5236\\u9009\\u62E9 1 \\u4E2A\\u6587\\u4EF6\\uFF0C\\u672C\\u6B21\\u9009\\u62E9\\u4E86 \".concat(files.length, \" \\u4E2A\\u6587\\u4EF6\\uFF0C\\u5171\\u9009\\u62E9\\u4E86 \").concat(files.length + fileList.length, \" \\u4E2A\\u6587\\u4EF6\"));\n    },\n    //删除文件之前的钩子，参数为上传的文件和文件列表，若返回 false 或者返回 Promise 且被 reject，则停止删除。\n    beforeRemove: function beforeRemove(file, fileList) {\n      return this.$confirm(\"\\u786E\\u5B9A\\u79FB\\u9664 \".concat(file.name, \"\\uFF1F\"));\n    },\n    uploading: function uploading(params) {\n      var id = this.$route.query.id;\n      window.console.log(params.file);\n\n      var _this = this;\n\n      var baseUrl = axios.defaults.baseURL; // for(let i in params.)\n\n      var chunkSize = 5 * 1024 * 1024;\n      var fileSize = 0;\n      var file = null;\n      var hasUploaded = 0;\n      var chunks = 0;\n      var spark = new SparkMD5.ArrayBuffer(); // window.console.log(456);\n\n      file = params.file;\n      fileSize = file.size;\n      responseChange(file); // 0.响应点击\n\n      function responseChange(_x) {\n        return _responseChange.apply(this, arguments);\n      } // 1.修改时间+文件名称+最后修改时间-->MD5\n\n\n      function _responseChange() {\n        _responseChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(file) {\n          var fileMd5Value, result;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return md5File(file);\n\n                case 2:\n                  fileMd5Value = _context.sent;\n                  window.console.log(123); // 第二步：校验文件的MD5\n\n                  window.console.log(123);\n                  _context.next = 7;\n                  return checkFileMD5(file.name, fileMd5Value);\n\n                case 7:\n                  result = _context.sent;\n                  window.console.log(456); // 如果文件已存在, 就秒传\n\n                  if (!result.file) {\n                    _context.next = 15;\n                    break;\n                  }\n\n                  _this.percentage1 = 0;\n                  _this.percentage2 = 0;\n\n                  _this.$refs['uploadWord'].clearFiles();\n\n                  _this.$message.warning('文件已存在');\n\n                  return _context.abrupt(\"return\");\n\n                case 15:\n                  _context.next = 17;\n                  return checkAndUploadChunk(fileMd5Value, result.chunkList);\n\n                case 17:\n                  // 第四步: 通知服务器所有分片已上传完成\n                  notifyServer(fileMd5Value);\n\n                case 18:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n        return _responseChange.apply(this, arguments);\n      }\n\n      function md5File(file) {\n        return new Promise(function (resolve, reject) {\n          var blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice,\n              //chunkSize = 2097152, // Read in chunks of 2MB\n          chunkSize = file.size / 100,\n              //chunks = Math.ceil(file.size / chunkSize),\n          chunks = 100,\n              currentChunk = 0,\n              spark = new SparkMD5.ArrayBuffer(),\n              fileReader = new FileReader();\n\n          fileReader.onload = function (e) {\n            // console.log('read chunk nr', currentChunk + 1, 'of', chunks);\n            spark.append(e.target.result); // Append array buffer\n\n            currentChunk++;\n\n            if (currentChunk < chunks) {\n              loadNext();\n            } else {\n              var cur = +new Date();\n              console.log('finished loading'); // alert(spark.end() + '---' + (cur - pre)); // Compute hash\n\n              var result = spark.end();\n              resolve(result);\n            }\n          };\n\n          fileReader.onerror = function () {\n            console.warn('oops, something went wrong.');\n          };\n\n          function loadNext() {\n            var start = currentChunk * chunkSize,\n                end = start + chunkSize >= file.size ? file.size : start + chunkSize;\n            fileReader.readAsArrayBuffer(blobSlice.call(file, start, end));\n            _this.percentage1 = currentChunk + 1; // $('#checkProcessStyle').css({\n            //     width: currentChunk + 1 + '%'\n            // });\n            // $('#checkProcessValue').html(currentChunk + 1 + '%');\n            // $(\"#tip\").html(currentChunk)\n          }\n\n          loadNext();\n        });\n      } // 2.校验文件的MD5\n\n\n      function checkFileMD5(fileName, fileMd5Value) {\n        return new Promise(function (resolve, reject) {\n          var url = baseUrl + '/check/file?fileName=' + fileName + '&fileMd5Value=' + fileMd5Value; // window.console.log(_this.$axios);\n\n          _this.$axios({\n            method: 'get',\n            url: url\n          }).then(function (res) {\n            return resolve(res.data);\n          }); // $.getJSON(url, function(data) {\n          //     resolve(data);\n          // });\n\n        });\n      } // 3.上传chunk\n\n\n      function checkAndUploadChunk(_x2, _x3) {\n        return _checkAndUploadChunk.apply(this, arguments);\n      } // 3-2. 上传chunk\n\n\n      function _checkAndUploadChunk() {\n        _checkAndUploadChunk = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(fileMd5Value, chunkList) {\n          var i, exit, index, radio;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  chunks = Math.ceil(fileSize / chunkSize);\n                  hasUploaded = chunkList.length;\n                  i = 0;\n\n                case 3:\n                  if (!(i < chunks)) {\n                    _context2.next = 15;\n                    break;\n                  }\n\n                  exit = chunkList.indexOf(i + '') > -1; // 如果已经存在, 则不用再上传当前块\n\n                  if (exit) {\n                    _context2.next = 12;\n                    break;\n                  }\n\n                  _context2.next = 8;\n                  return upload(i, fileMd5Value, chunks);\n\n                case 8:\n                  index = _context2.sent;\n                  hasUploaded++;\n                  radio = Math.floor(hasUploaded / chunks * 100);\n                  _this.percentage2 = radio; // $('#uploadProcessStyle').css({\n                  //     width: radio + '%'\n                  // });\n                  // $('#uploadProcessValue').html(radio + '%');\n\n                case 12:\n                  i++;\n                  _context2.next = 3;\n                  break;\n\n                case 15:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n        return _checkAndUploadChunk.apply(this, arguments);\n      }\n\n      function upload(i, fileMd5Value, chunks) {\n        return new Promise(function (resolve, reject) {\n          //构造一个表单，FormData是HTML5新增的\n          var end = (i + 1) * chunkSize >= file.size ? file.size : (i + 1) * chunkSize;\n          var form = new FormData();\n          form.append('data', file.slice(i * chunkSize, end)); //file对象的slice方法用于切出文件的一部分\n\n          form.append('total', chunks); //总片数\n\n          form.append('index', i); //当前是第几片\n\n          form.append('fileMd5Value', fileMd5Value);\n\n          _this.axios({\n            url: baseUrl + '/uploads',\n            method: 'POST',\n            data: form,\n            //刚刚构建的form数据对象\n            //async: true, //异步\n            processData: false //很重要，告诉jquery不要对form进行处理\n            //contentType: false, //很重要，指定为false才能形成正确的Content-Type\n            // success: function(data) {\n            //     resolve(data.desc);\n            // }\n\n          }).then(function (res) {\n            resolve(res.data.desc);\n          });\n        });\n      } // 第四步: 通知服务器所有分片已上传完成\n\n\n      function notifyServer(fileMd5Value) {\n        var url = baseUrl + '/merge?md5=' + fileMd5Value + '&fileName=' + file.name + '&size=' + file.size + '&deviceId=' + id;\n\n        _this.$axios({\n          method: 'get',\n          url: url\n        }).then(function (res) {\n          _this.percentage1 = 0;\n          _this.percentage2 = 0;\n\n          _this.$refs['uploadWord'].clearFiles();\n\n          _this.$message.success('文件上传成功');\n\n          _this.getDeviceIDAndInfo();\n        }); // $.getJSON(url, function(data) {\n        //     alert('上传成功');\n        // });\n\n      }\n\n      function getDate() {\n        var d = new Date();\n        return d.getMinutes() + ':' + d.getSeconds() + ' ' + d.getMilliseconds();\n      }\n    }\n  }\n};",{"version":3,"sources":["ProductDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n * @Author: your name\r\n * @Date: 2020-05-06 10:56:10\r\n * @LastEditTime: 2020-07-03 16:57:33\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\vue-manage-system\\src\\components\\view\\ProductDetails.vue\r\n -->\r\n<!--  -->\r\n<template>\r\n    <div class>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-copy\"></i>\r\n                    设备列表\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>设备详情</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <div class=\"container\">\r\n            <div class=\"mb-2 d-flex jc-between\">\r\n                <div>\r\n                    <el-button\r\n                        type=\"primary\"\r\n                        icon=\"el-icon-lx-back\"\r\n                        class=\"handle-del mr10 mb-30\"\r\n                        @click=\"$router.go(-1)\"\r\n                    >返回</el-button>\r\n                </div>\r\n                <!-- <el-button type=\"primary\" icon=\"el-icon-edit\" class=\"handle-del mr10 mb-30\">编辑</el-button> -->\r\n                <div style=\"float: right;display:flex;margin-bottom: 10px\">\r\n                    <div>\r\n                        <el-upload\r\n                            multiple\r\n                            :headers=\"getAuthHeaders()\"\r\n                            class=\"upload-demo\"\r\n                            ref=\"uploadWord\"\r\n                            action\r\n                            :http-request=\"uploading\"\r\n                            :file-list=\"fileListWord\"\r\n                            list-type=\"text\"\r\n                            :limit=\"1\"\r\n                            :on-exceed=\"handleExceed3\"\r\n                            :before-remove=\"beforeRemove\"\r\n                            accept=\".pdf, .doc, .docx\"\r\n                            :auto-upload=\"false\"\r\n                        >\r\n                            <el-button size=\"small\" type=\"primary\">上传文档</el-button>\r\n\r\n                            <!-- <span slot=\"tip\" class=\"el-upload__tip ml-2\">只能上传pdf/word文件，且不超过2MB，最多上传3份文档</span> -->\r\n                        </el-upload>\r\n                        <div v-if=\"percentage1\">\r\n                            校验进度\r\n                            <el-progress :percentage=\"percentage1\"></el-progress>\r\n                        </div>\r\n                        <div v-if=\"percentage2\">\r\n                            上传进度\r\n                            <el-progress :percentage=\"percentage2\"></el-progress>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <el-button\r\n                            class=\"ml-3\"\r\n                            size=\"small\"\r\n                            type=\"primary\"\r\n                            @click=\"()=>{$refs['uploadWord'].submit()}\"\r\n                        >确认上传</el-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"plugins-tips\">设备信息</div>\r\n            <el-row :gutter=\"20\" class=\"mb-30\" v-if=\"tableData.info\">\r\n                <el-col :span=\"12\">\r\n                    <div class=\"ml-50\">\r\n                        <p>设备ID: {{tableData.info.eq}}</p>\r\n                        <p>工作状态: {{tableData.info.status}}</p>\r\n                        <p>设备名称: {{tableData.info.device_name}}</p>\r\n                        <p>型号描述: {{tableData.info.device_description}}</p>\r\n                        <p>设备种类: {{tableData.info.typename}}</p>\r\n                        <p>创建人: {{tableData.info.created_by}}</p>\r\n                        <p>创建日期: {{tableData.info.created_time}}</p>\r\n                    </div>\r\n                </el-col>\r\n                <el-col :span=\"12\">\r\n                    <div class=\"ml-50\">\r\n                        <p>开关机:{{tableData.info.is_on == 0? '关机': '开机'}}</p>\r\n                        <p>客户名称:{{tableData.info.device_supplier}}</p>\r\n                        <p>安装地址:{{tableData.info.address}}</p>\r\n                        <div class=\"demo-image__preview\">\r\n                            <el-image\r\n                                style=\"width: 100px; height: 100px\"\r\n                                :src=\"tableData.imgList[0]?(axios.defaults.baseURL.slice(0, -4) + tableData.imgList[0].file_path.split('.').shift()):''\"\r\n                                :preview-src-list=\"srcList\"\r\n                            >\r\n                                <div\r\n                                    slot=\"error\"\r\n                                    class=\"image-slot\"\r\n                                    style=\"width: 100px; height: 100px;font-size: 30px;background-color: #f5f7fa;color: #909399;text-align: center;line-height: 100px\"\r\n                                >\r\n                                    <i class=\"el-icon-picture-outline\"></i>\r\n                                    <!-- <i>您没有上传图片</i> -->\r\n                                </div>\r\n                            </el-image>\r\n                        </div>\r\n                    </div>\r\n                </el-col>\r\n            </el-row>\r\n            <div class=\"plugins-tips\">设备文档</div>\r\n            <div class=\"d-flex ai-start jc-start flex-wrap px-5\">\r\n                <a\r\n                    target=\"_blank\"\r\n                    :href=\"axios.defaults.baseURL.slice(0, -4) + item.file_path\"\r\n                    :underline=\"false\"\r\n                    style=\"margin: 15px 15px 0 0\"\r\n                    v-for=\"(item, index) in tableData.wordList\"\r\n                    :key=\"index\"\r\n                >\r\n                    <el-button size=\"mini\" type=\"warning\">{{item.file_name}} 下载</el-button>\r\n                </a>\r\n            </div>\r\n            <div class=\"plugins-tips mt-5\">维修记录</div>\r\n            <el-timeline>\r\n                <el-timeline-item\r\n                    :timestamp=\"item.date\"\r\n                    placement=\"top\"\r\n                    v-for=\"(item, index) in tableData.repair\"\r\n                    :key=\"index\"\r\n                >\r\n                    <el-card>\r\n                        <el-table :data=\"[item]\" style=\"width: 100%\">\r\n                            <el-table-column label=\"服务提出时间\" width=\"180\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <div>{{scope.row.created_time}}</div>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column label=\"故障类型\" width=\"180\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <div>{{scope.row.type}}</div>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column label=\"故障现象\" width=\"180\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <div>{{scope.row.phenomenon}}</div>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column label=\"可能产生的原因\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <div>{{scope.row.cause}}</div>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column label=\"排除办法\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <div>{{scope.row.methods}}</div>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column label=\"维修人\" width=\"180\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <div>{{scope.row.repair_person}}</div>\r\n                                </template>\r\n                            </el-table-column>\r\n                        </el-table>\r\n                        <!-- <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>服务提出时间</th>\r\n                                    <th>故障类型</th>\r\n                                    <th>故障现象</th>\r\n                                    <th>可能产生的原因</th>\r\n                                    <th>排除办法</th>\r\n                                    <th>维修人</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{{item.created_time}}</td>\r\n                                    <td>{{item.type}}</td>\r\n                                    <td>{{item.phenomenon}}</td>\r\n                                    <td>{{item.cause}}</td>\r\n                                    <td>{{item.methods}}</td>\r\n                                    <td>{{item.repair_person}}</td>\r\n                                </tr>\r\n                            </thead>\r\n                        </table>-->\r\n                        <p class=\"mt-10\">备注: {{item.More}}</p>\r\n                    </el-card>\r\n                </el-timeline-item>\r\n            </el-timeline>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport SparkMD5 from 'spark-md5';\r\nexport default {\r\n    name: 'productDetails',\r\n    data() {\r\n        return {\r\n            tableData: {},\r\n            maintenanceList: [],\r\n            srcList: [],\r\n            fileListWord: [],\r\n            percentage1: 0,\r\n            percentage2: 0\r\n        };\r\n    },\r\n    created() {\r\n        this.getDeviceIDAndInfo();\r\n    },\r\n    components: {},\r\n\r\n    computed: {},\r\n\r\n    methods: {\r\n        getDeviceIDAndInfo() {\r\n            window.console.log(this.$route.query.id);\r\n            axios({\r\n                method: 'get',\r\n                url: '/device/getDeviceInfo',\r\n                params: {\r\n                    id: this.$route.query.id\r\n                }\r\n            })\r\n                .then(res => {\r\n                    window.console.log(res.data);\r\n                    if (res.data.success) {\r\n                        this.$set(this.tableData, 'info', res.data.info[0]);\r\n                        this.$set(this.tableData, 'imgList', res.data.imgList);\r\n                        this.$set(this.tableData, 'wordList', res.data.wordList);\r\n                        this.$set(this.tableData, 'repair', res.data.repair);\r\n\r\n                        res.data.imgList.forEach(item => {\r\n                            this.srcList.push(axios.defaults.baseURL.slice(0, -4) + item.file_path.split('.').shift() || '');\r\n                        });\r\n                        // this.tableData.info = res.data.info[0];\r\n                        window.console.log(this.tableData);\r\n                    }\r\n                })\r\n                .catch();\r\n        },\r\n        handleExceed3(files, fileList) {\r\n            this.$message.warning(\r\n                `当前限制选择 1 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`\r\n            );\r\n        },\r\n        //删除文件之前的钩子，参数为上传的文件和文件列表，若返回 false 或者返回 Promise 且被 reject，则停止删除。\r\n        beforeRemove(file, fileList) {\r\n            return this.$confirm(`确定移除 ${file.name}？`);\r\n        },\r\n        uploading(params) {\r\n            let id = this.$route.query.id;\r\n            window.console.log(params.file);\r\n            let _this = this;\r\n            let baseUrl = axios.defaults.baseURL;\r\n            // for(let i in params.)\r\n            let chunkSize = 5 * 1024 * 1024;\r\n            let fileSize = 0;\r\n            let file = null;\r\n            let hasUploaded = 0;\r\n            let chunks = 0;\r\n            let spark = new SparkMD5.ArrayBuffer();\r\n            // window.console.log(456);\r\n\r\n            file = params.file;\r\n            fileSize = file.size;\r\n            responseChange(file);\r\n\r\n            // 0.响应点击\r\n            async function responseChange(file) {\r\n                // 第一步：按照 修改时间+文件名称+最后修改时间-->MD5\r\n                // 显示文件校验进度\r\n                // $('#process1').slideDown(200);\r\n                // 开始校验\r\n                let fileMd5Value = await md5File(file);\r\n                window.console.log(123);\r\n\r\n                // 第二步：校验文件的MD5\r\n                window.console.log(123);\r\n\r\n                let result = await checkFileMD5(file.name, fileMd5Value);\r\n                window.console.log(456);\r\n                // 如果文件已存在, 就秒传\r\n                if (result.file) {\r\n                    _this.percentage1 = 0;\r\n\r\n                    _this.percentage2 = 0;\r\n                    _this.$refs['uploadWord'].clearFiles();\r\n\r\n                    _this.$message.warning('文件已存在');\r\n                    return;\r\n                }\r\n                // let exit = false\r\n                // 显示文件上传进度\r\n                // $('#process2').slideDown(200);\r\n                // 第三步：检查并上传MD5\r\n                await checkAndUploadChunk(fileMd5Value, result.chunkList);\r\n                // 第四步: 通知服务器所有分片已上传完成\r\n                notifyServer(fileMd5Value);\r\n            }\r\n\r\n            // 1.修改时间+文件名称+最后修改时间-->MD5\r\n            function md5File(file) {\r\n                return new Promise((resolve, reject) => {\r\n                    var blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice,\r\n                        //chunkSize = 2097152, // Read in chunks of 2MB\r\n                        chunkSize = file.size / 100,\r\n                        //chunks = Math.ceil(file.size / chunkSize),\r\n                        chunks = 100,\r\n                        currentChunk = 0,\r\n                        spark = new SparkMD5.ArrayBuffer(),\r\n                        fileReader = new FileReader();\r\n\r\n                    fileReader.onload = function(e) {\r\n                        // console.log('read chunk nr', currentChunk + 1, 'of', chunks);\r\n                        spark.append(e.target.result); // Append array buffer\r\n                        currentChunk++;\r\n\r\n                        if (currentChunk < chunks) {\r\n                            loadNext();\r\n                        } else {\r\n                            let cur = +new Date();\r\n                            console.log('finished loading');\r\n                            // alert(spark.end() + '---' + (cur - pre)); // Compute hash\r\n                            let result = spark.end();\r\n                            resolve(result);\r\n                        }\r\n                    };\r\n\r\n                    fileReader.onerror = function() {\r\n                        console.warn('oops, something went wrong.');\r\n                    };\r\n\r\n                    function loadNext() {\r\n                        var start = currentChunk * chunkSize,\r\n                            end = start + chunkSize >= file.size ? file.size : start + chunkSize;\r\n\r\n                        fileReader.readAsArrayBuffer(blobSlice.call(file, start, end));\r\n                        _this.percentage1 = currentChunk + 1;\r\n                        // $('#checkProcessStyle').css({\r\n                        //     width: currentChunk + 1 + '%'\r\n                        // });\r\n                        // $('#checkProcessValue').html(currentChunk + 1 + '%');\r\n                        // $(\"#tip\").html(currentChunk)\r\n                    }\r\n\r\n                    loadNext();\r\n                });\r\n            }\r\n            // 2.校验文件的MD5\r\n            function checkFileMD5(fileName, fileMd5Value) {\r\n                return new Promise((resolve, reject) => {\r\n                    let url = baseUrl + '/check/file?fileName=' + fileName + '&fileMd5Value=' + fileMd5Value;\r\n                    // window.console.log(_this.$axios);\r\n                    _this\r\n                        .$axios({\r\n                            method: 'get',\r\n                            url: url\r\n                        })\r\n                        .then(res => resolve(res.data));\r\n                    // $.getJSON(url, function(data) {\r\n                    //     resolve(data);\r\n                    // });\r\n                });\r\n            }\r\n            // 3.上传chunk\r\n            async function checkAndUploadChunk(fileMd5Value, chunkList) {\r\n                chunks = Math.ceil(fileSize / chunkSize);\r\n                hasUploaded = chunkList.length;\r\n                for (let i = 0; i < chunks; i++) {\r\n                    let exit = chunkList.indexOf(i + '') > -1;\r\n                    // 如果已经存在, 则不用再上传当前块\r\n                    if (!exit) {\r\n                        let index = await upload(i, fileMd5Value, chunks);\r\n                        hasUploaded++;\r\n                        let radio = Math.floor((hasUploaded / chunks) * 100);\r\n                        _this.percentage2 = radio;\r\n                        // $('#uploadProcessStyle').css({\r\n                        //     width: radio + '%'\r\n                        // });\r\n                        // $('#uploadProcessValue').html(radio + '%');\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 3-2. 上传chunk\r\n            function upload(i, fileMd5Value, chunks) {\r\n                return new Promise((resolve, reject) => {\r\n                    //构造一个表单，FormData是HTML5新增的\r\n                    let end = (i + 1) * chunkSize >= file.size ? file.size : (i + 1) * chunkSize;\r\n                    let form = new FormData();\r\n                    form.append('data', file.slice(i * chunkSize, end)); //file对象的slice方法用于切出文件的一部分\r\n                    form.append('total', chunks); //总片数\r\n                    form.append('index', i); //当前是第几片\r\n                    form.append('fileMd5Value', fileMd5Value);\r\n                    _this\r\n                        .axios({\r\n                            url: baseUrl + '/uploads',\r\n                            method: 'POST',\r\n                            data: form, //刚刚构建的form数据对象\r\n                            //async: true, //异步\r\n                            processData: false //很重要，告诉jquery不要对form进行处理\r\n                            //contentType: false, //很重要，指定为false才能形成正确的Content-Type\r\n                            // success: function(data) {\r\n                            //     resolve(data.desc);\r\n                            // }\r\n                        })\r\n                        .then(res => {\r\n                            resolve(res.data.desc);\r\n                        });\r\n                });\r\n            }\r\n\r\n            // 第四步: 通知服务器所有分片已上传完成\r\n            function notifyServer(fileMd5Value) {\r\n                let url = baseUrl + '/merge?md5=' + fileMd5Value + '&fileName=' + file.name + '&size=' + file.size + '&deviceId=' + id;\r\n                _this\r\n                    .$axios({\r\n                        method: 'get',\r\n                        url: url\r\n                    })\r\n                    .then(res => {\r\n                        _this.percentage1 = 0;\r\n                        _this.percentage2 = 0;\r\n                        _this.$refs['uploadWord'].clearFiles();\r\n                        _this.$message.success('文件上传成功');\r\n                        _this.getDeviceIDAndInfo()\r\n                    });\r\n                // $.getJSON(url, function(data) {\r\n                //     alert('上传成功');\r\n                // });\r\n            }\r\n\r\n            function getDate() {\r\n                let d = new Date();\r\n                return d.getMinutes() + ':' + d.getSeconds() + ' ' + d.getMilliseconds();\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n<style scoped>\r\nth {\r\n    background-color: #eef1f6;\r\n    padding: 5px 10px;\r\n}\r\ntd {\r\n    padding: 5px 10px;\r\n}\r\np {\r\n    line-height: 25px;\r\n}\r\n.ml-50 {\r\n    margin-left: 50px;\r\n}\r\n.mb-30 {\r\n    margin-bottom: 30px;\r\n}\r\n.mt-10 {\r\n    margin-top: 10px;\r\n}\r\n.annex img {\r\n    margin: 10px 10px;\r\n    vertical-align: middle;\r\n}\r\n</style>"],"sourceRoot":"src/components/deviceRecord"}]}