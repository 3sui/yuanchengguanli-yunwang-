{"remainingRequest":"D:\\git\\hualiyeya\\web\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js!D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\hualiyeya\\web\\src\\components\\Analysis\\DeviceAnalysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\git\\hualiyeya\\web\\src\\components\\Analysis\\DeviceAnalysis.vue","mtime":1594115102127},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\hualiyeya\\web\\node_modules\\_vue-loader@15.9.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar echarts = require('echarts/lib/echarts');\n\nexport default {\n  name: 'DeviceAnalysis',\n  data: function data() {\n    return {\n      datepick: '',\n      deviceTop: [],\n      //     {\n      //         sort: 1,\n      //         device_type: '干燥设备',\n      //         count: 247\n      //     },\n      //     {'\n      //         sort: 2,\n      //         device_type: '电机设备',\n      //         count: 180\n      //     },\n      //     {\n      //         sort: 3,\n      //         device_type: '钣金设备',\n      //         count: 140\n      //     },\n      //     {\n      //         sort: 4,\n      //         device_type: '数控机床',\n      //         count: 93\n      //     },\n      //     {\n      //         sort: 5,\n      //         device_type: '智能设备',\n      //         count: 48\n      //     },\n      //     {\n      //         sort: 6,\n      //         device_type: '三哑设备',\n      //         count: 35\n      //     }\n      // ],\n      style: ['s1', 's2', 's3', 's4'],\n      backgroundstyle: ['b1', 'b2', 'b3', 'b4', 'b5'],\n      devicetypelist: [],\n      devicedatalist: [],\n      iconlist: ['el-icon-s-platform', 'el-icon-box', 'el-icon-suitcase', 'el-icon-data-analysis', 'el-icon-pie-chart']\n    };\n  },\n  created: function created() {\n    this.getDeviceTypes();\n  },\n  mounted: function mounted() {\n    this.getChart3();\n  },\n  methods: {\n    //获取设备类型设备数量数据\n    getDeviceTypes: function getDeviceTypes() {\n      var _this = this;\n\n      this.$axios.get('DeviceByType').then(function (res) {\n        if (res) {\n          _this.deviceTop = res.data;\n          console.log(_this.deviceTop);\n        }\n      }).then(function () {\n        _this.getdata();\n\n        _this.getChart3();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    //获取数据\n    getdata: function getdata() {\n      this.devicetypelist = [];\n      this.devicedatalist = [];\n\n      for (var i = 0; i < this.deviceTop.length; i++) {\n        var item = this.deviceTop[i];\n        this.devicetypelist.push(item.device_type);\n        var devicedata = {\n          value: item.count,\n          name: item.device_type\n        };\n        this.devicedatalist.push(devicedata);\n      }\n    },\n    //获取图表1\n    getChart3: function getChart3() {\n      var myChart = this.$echarts.init(document.getElementById('byDeviceType')); // 指定图表的配置项和数据\n\n      var option = {\n        title: {\n          text: '设备类型数量分布图',\n          left: '40%'\n        },\n        color: ['#8378EA', '#E7BCF3', '#FB7293', '#FF9F7F', '#9FE6B8', '#32C5E9', '#4B7CF3', '#EB6379', '#068687', '#82DACA'],\n        backgroundColor: '#fff',\n        legend: {\n          orient: 'vertical',\n          top: 'center',\n          right: '5%',\n          data: this.devicetypelist,\n          textStyle: {\n            color: '#000',\n            fontSize: 16\n          }\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid: {\n          left: 150,\n          bottom: 30\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        series: [{\n          name: '设备类型',\n          type: 'pie',\n          radius: ['20%', '65%'],\n          //半径\n          center: ['40%', '60%'],\n          //位置\n          roseType: 'radius',\n          label: {\n            show: true,\n            normal: {\n              position: 'outside',\n              fontSize: 16\n            }\n          },\n          labelLine: {\n            length: 1,\n            length2: 20,\n            smooth: true\n          },\n          data: this.devicedatalist\n        }]\n      }; // 使用刚指定的配置项和数据显示图表。\n\n      myChart.setOption(option);\n    }\n  }\n};",{"version":3,"sources":["DeviceAnalysis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-cascades\"></i> 分析中心\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>设备分析</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <div class=\"container\">\r\n            <!-- <el-row :gutter=\"20\" class=\"mgb20\">\r\n                <el-col :span=\"6\">\r\n                    <div class=\"block\">\r\n                        <span class=\"demonstration\"></span>\r\n                        <el-date-picker\r\n                            v-model=\"datepick\"\r\n                            type=\"daterange\"\r\n                            align=\"right\"\r\n                            unlink-panels\r\n                            range-separator=\"-\"\r\n                            start-placeholder=\"开始日期\"\r\n                            end-placeholder=\"结束日期\"\r\n                            \r\n                        ></el-date-picker>\r\n                    </div>\r\n                </el-col>\r\n                <el-col :span=\"6\">\r\n                    <el-button type=\"primary\" icon=\"el-icon-search\">查询报表</el-button>\r\n                    <el-button type=\"primary\" icon=\"el-icon-download\">导出报表</el-button>\r\n                </el-col>\r\n            </el-row>-->\r\n            <el-row :gutter=\"20\" type=\"flex\">\r\n                <el-col  v-for=\"(device,index) in deviceTop\" :key=\"index\"   v-if=\"index<5\">\r\n                    <el-card\r\n                        shadow=\"hover\"\r\n                        :body-style=\"{padding: '0px'}\"\r\n                        :class=\"backgroundstyle[index]\"\r\n                     \r\n                        class=\"elcard\"\r\n                    >\r\n                        <el-row :gutter=\"20\">\r\n                            <el-col :span=\"6\" :offset=\"3\">\r\n                                <span class=\"grid-content\">\r\n                                    <i :class=\"iconlist[index]\"></i>\r\n                                </span>\r\n                            </el-col>\r\n                            <el-col :span=\"14\" >\r\n                                <span class=\"grid-cont-right\">\r\n                                    <div class=\"grid-num\">{{device.count}}</div>\r\n                                    <div class=\"grid_dev\">设备数</div>\r\n                                </span>\r\n                            </el-col>\r\n                        </el-row>\r\n\r\n                        <div class=\"card-title\">{{device.device_type}}</div>\r\n                    </el-card>\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n        <div class=\"container\" style=\"margin-top:10px\">\r\n            <el-row :gutter=\"20\" class=\"mgb20\">\r\n                <el-col :span=\"12\">\r\n                    <div id=\"byDeviceType\" style=\"height: 480px; width: 100%;\"></div>\r\n                </el-col>\r\n\r\n                <el-col :span=\"12\">\r\n                    <el-table :data=\"deviceTop\" height=\"480px\" border style=\"width: 100%\">\r\n                        <el-table-column prop=\"sort\" label=\"序号\" width=\"180\" align=\"center\"></el-table-column>\r\n                        <el-table-column prop=\"device_type\" label=\"设备种类\" width=\"180\" align=\"center\"></el-table-column>\r\n                        <el-table-column prop=\"count\" label=\"设备数量\" align=\"center\"></el-table-column>\r\n                    </el-table>\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nlet echarts = require('echarts/lib/echarts');\r\nexport default {\r\n    name: 'DeviceAnalysis',\r\n    data() {\r\n        return {\r\n            datepick: '',\r\n            deviceTop: [],\r\n            //     {\r\n            //         sort: 1,\r\n            //         device_type: '干燥设备',\r\n            //         count: 247\r\n            //     },\r\n            //     {'\r\n            //         sort: 2,\r\n            //         device_type: '电机设备',\r\n            //         count: 180\r\n            //     },\r\n            //     {\r\n            //         sort: 3,\r\n            //         device_type: '钣金设备',\r\n            //         count: 140\r\n            //     },\r\n            //     {\r\n            //         sort: 4,\r\n            //         device_type: '数控机床',\r\n            //         count: 93\r\n            //     },\r\n            //     {\r\n            //         sort: 5,\r\n            //         device_type: '智能设备',\r\n            //         count: 48\r\n            //     },\r\n            //     {\r\n            //         sort: 6,\r\n            //         device_type: '三哑设备',\r\n            //         count: 35\r\n            //     }\r\n            // ],\r\n            style: ['s1', 's2', 's3', 's4'],\r\n            backgroundstyle: ['b1', 'b2', 'b3', 'b4','b5'],\r\n            devicetypelist: [],\r\n            devicedatalist: [],\r\n            iconlist:['el-icon-s-platform','el-icon-box','el-icon-suitcase','el-icon-data-analysis','el-icon-pie-chart']\r\n        };\r\n    },\r\n    created() {\r\n        this.getDeviceTypes();\r\n    },\r\n    mounted() {\r\n        this.getChart3();\r\n    },\r\n    methods: {\r\n        //获取设备类型设备数量数据\r\n        getDeviceTypes() {\r\n            this.$axios\r\n                .get('DeviceByType')\r\n                .then(res => {\r\n                    if (res) {\r\n                        this.deviceTop = res.data;\r\n                        console.log(this.deviceTop);\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    this.getdata();\r\n                    this.getChart3();\r\n                })\r\n\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n        //获取数据\r\n        getdata() {\r\n            this.devicetypelist = [];\r\n            this.devicedatalist = [];\r\n            for (let i = 0; i < this.deviceTop.length; i++) {\r\n                let item = this.deviceTop[i];\r\n                this.devicetypelist.push(item.device_type);\r\n                let devicedata = {\r\n                    value: item.count,\r\n                    name: item.device_type\r\n                };\r\n                this.devicedatalist.push(devicedata);\r\n            }\r\n        },\r\n        //获取图表1\r\n        getChart3() {\r\n            let myChart = this.$echarts.init(document.getElementById('byDeviceType'));\r\n            // 指定图表的配置项和数据\r\n\r\n            let option = {\r\n                title: {\r\n                    text: '设备类型数量分布图',\r\n                    left: '40%'\r\n                },\r\n                color: ['#8378EA', '#E7BCF3', '#FB7293', '#FF9F7F', '#9FE6B8', '#32C5E9', '#4B7CF3', '#EB6379', '#068687', '#82DACA'],\r\n                backgroundColor: '#fff',\r\n                legend: {\r\n                    orient: 'vertical',\r\n                    top: 'center',\r\n                    right: '5%',\r\n\r\n                    data: this.devicetypelist,\r\n                    textStyle: {\r\n                        color: '#000',\r\n                        fontSize: 16\r\n                    }\r\n                },\r\n                toolbox: {\r\n                    show: true,\r\n                    feature: {\r\n                        saveAsImage: {}\r\n                    }\r\n                },\r\n                grid: {\r\n                    left: 150,\r\n                    bottom: 30\r\n                },\r\n\r\n                tooltip: {\r\n                    trigger: 'item',\r\n                    formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n                },\r\n                series: [\r\n                    {\r\n                        name: '设备类型',\r\n                        type: 'pie',\r\n                        radius: ['20%', '65%'], //半径\r\n                        center: ['40%', '60%'], //位置\r\n                        roseType: 'radius',\r\n                        label: {\r\n                            show: true,\r\n                            normal: {\r\n                                position: 'outside',\r\n                                fontSize: 16\r\n                            }\r\n                        },\r\n                        labelLine: {\r\n                            length: 1,\r\n                            length2: 20,\r\n                            smooth: true\r\n                        },\r\n                        data: this.devicedatalist\r\n                    }\r\n                ]\r\n            };\r\n            // 使用刚指定的配置项和数据显示图表。\r\n            myChart.setOption(option);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* .el-row {\r\n    margin-bottom: 10px;\r\n} */\r\n\r\n.grid-content {\r\n    height: 70px;\r\n    line-height: 70px;\r\n    font-size: 50px;\r\n    color: white;\r\n}\r\n.elcard {\r\n    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);\r\n    font-family: 'open sans';\r\n    border-radius: 10px;\r\n    padding-top:10px ;\r\n}\r\n.grid-cont-right {\r\n    flex: 1;  \r\n    font-size: 14px;\r\n    color: #999;\r\n    height: 120px;\r\n}\r\n\r\n.grid-num {\r\n    color: white;\r\n    font-size: 30px;\r\n    font-weight:500;\r\n    /* margin-bottom: 10px; */\r\n    height: 50px;\r\n    line-height: 50px;\r\n    font-family: 'open sans';\r\n    text-align: left;\r\n \r\n}\r\n.grid_dev {\r\n    font-size: 14px;\r\n    height: 20px;\r\n    line-height: 20px;\r\n    color: white;\r\n    text-align: left;\r\n    font-weight: 500;\r\n}\r\n\r\n.grid-con-icon {\r\n    font-size: 50px;\r\n    width: 120px;\r\n    height: 120px;\r\n    text-align: left;\r\n    line-height: 120px;\r\n    color: #fff;\r\n}\r\n\r\n.card-title {\r\n    text-align: left;\r\n    font-size: 20px;\r\n    /* font-weight: bold; */\r\n    color: white;\r\n    letter-spacing: 0.2em;\r\n    /* width: 50%; */\r\n    line-height: 50px;\r\n    height: 50px;\r\n    /* padding-left: 25px; */\r\n    font-family: 'open sans';\r\n     text-align: center;\r\n    /* background-color: #f0f0f0; */\r\n}\r\n\r\n.s1 {\r\n    color: #13aaf9;\r\n}\r\n\r\n.s3 {\r\n    color: #eea03c;\r\n}\r\n\r\n.s2 {\r\n    color: darkturquoise;\r\n}\r\n\r\n.s4 {\r\n    color: #69d3ab;\r\n}\r\n\r\n.b1 {\r\n    /* background-color: #13aaf9; */\r\n     background-image: linear-gradient(90deg, #13aaee, #13aaff);\r\n}\r\n\r\n\r\n.b2 {\r\n    /* background-color: #968cec; */\r\n      background-image: linear-gradient(90deg,  #968cdd, #968cee);\r\n}\r\n\r\n.b4 {\r\n    /* background-color: darkturquoise; */\r\n    background-image: linear-gradient(90deg,  #00CEDD, #00CEEE);\r\n}\r\n\r\n.b3 {\r\n    /* background-color: #f5a1e2; */\r\n        background-image: linear-gradient(90deg,  #f5a1dd, #f5a1ee);\r\n}\r\n.b5 {\r\n    /* background-color: #f8bb90; */\r\n      background-image: linear-gradient(90deg, #f8bb88,#f8bb99);\r\n}\r\n.container {\r\n    padding-top: 15px;\r\n    padding-bottom: 15px;\r\n}\r\n</style>"],"sourceRoot":"src/components/Analysis"}]}